{"version":3,"file":"core-r.js","sources":["../node_modules/@microsoft/signalr/dist/esm/Errors.js","../node_modules/@microsoft/signalr/dist/esm/HttpClient.js","../node_modules/@microsoft/signalr/dist/esm/ILogger.js","../node_modules/@microsoft/signalr/dist/esm/Loggers.js","../node_modules/@microsoft/signalr/dist/esm/Utils.js","../node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","../node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","../node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","../node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","../node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","../node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","../node_modules/@microsoft/signalr/dist/esm/Subject.js","../node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js","../node_modules/@microsoft/signalr/dist/esm/HubConnection.js","../node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","../node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","../node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","../node_modules/@microsoft/signalr/dist/esm/ITransport.js","../node_modules/@microsoft/signalr/dist/esm/AbortController.js","../node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","../node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","../node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","../node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","../node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","../node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","../src/signalr-manager.ts","../src/dom-patcher.ts","../src/client-state.ts","../src/event-delegation.ts","../src/hydration.ts","../src/template-renderer.ts","../src/hint-queue.ts","../src/playground-bridge.ts","../src/client-computed.ts","../src/template-state.ts","../src/server-task.ts","../src/useComputed.ts","../src/hooks.ts","../src/useContext.ts","../src/usePaginatedServerTask.ts","../src/pub-sub.ts","../src/task-scheduling.ts","../src/signalr-hook.ts","../src/index-r.ts"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"8.0.17\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // Node added a fetch implementation to the global scope starting in v18.\r\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            if (typeof fetch === \"undefined\") {\r\n                this._fetchType = requireFunc(\"node-fetch\");\r\n            }\r\n            else {\r\n                // Use fetch from Node if available\r\n                this._fetchType = fetch;\r\n            }\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n    MessageType[MessageType[\"Ack\"] = 8] = \"Ack\";\r\n    MessageType[MessageType[\"Sequence\"] = 9] = \"Sequence\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class MessageBuffer {\r\n    constructor(protocol, connection, bufferSize) {\r\n        this._bufferSize = 100000;\r\n        this._messages = [];\r\n        this._totalMessageCount = 0;\r\n        this._waitForSequenceMessage = false;\r\n        // Message IDs start at 1 and always increment by 1\r\n        this._nextReceivingSequenceId = 1;\r\n        this._latestReceivedSequenceId = 0;\r\n        this._bufferedByteCount = 0;\r\n        this._reconnectInProgress = false;\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n    async _send(message) {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n        let backpressurePromise = Promise.resolve();\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver = () => { };\r\n            let backpressurePromiseRejector = () => { };\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            }\r\n            else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        }\r\n        catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n    _ack(ackMessage) {\r\n        let newestAckedMessage = -1;\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                }\r\n                else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            }\r\n            else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n    _shouldProcessMessage(message) {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            }\r\n            else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n        this._latestReceivedSequenceId = currentId;\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n    _resetSequence(message) {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n    _disconnected() {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n    async _resend() {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            : this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n        this._reconnectInProgress = false;\r\n    }\r\n    _dispose(error) {\r\n        error !== null && error !== void 0 ? error : (error = new Error(\"Unable to reconnect to server.\"));\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n    _isInvocationMessage(message) {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n    _ackTimer() {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }));\r\n                    }\r\n                    // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                }\r\n                catch { }\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n                // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\nclass BufferedItem {\r\n    constructor(message, id, resolver, rejector) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n}\r\n//# sourceMappingURL=MessageBuffer.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                };\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        }\r\n        catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        }\r\n        else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message)\r\n                            .catch((e) => {\r\n                            this._logger.log(LogLevel.Error, `Invoke client method threw error: ${getErrorString(e)}`);\r\n                        });\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n    _createCloseMessage() {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url, deleteOptions);\r\n            }\r\n            catch (err) {\r\n                error = err;\r\n            }\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    }\r\n                    catch {\r\n                        callStop = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.transport.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const negotiateUrl = new URL(url);\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        }\r\n        else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        }\r\n        else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n        negotiateUrl.search = searchParams.toString();\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 2;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _isAckMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n    _isSequenceMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withServerTimeout(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withKeepAliveInterval(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withStatefulReconnect(options) {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n        this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","import { HubConnectionBuilder, HubConnection, LogLevel } from '@microsoft/signalr';\r\nimport { Patch } from './types';\r\nimport { ArrayOperation } from './hooks';\r\n\r\n/**\r\n * Manages SignalR connection to the Minimact server hub\r\n */\r\nexport class SignalRManager {\r\n  private connection: HubConnection;\r\n  private reconnectInterval: number;\r\n  private debugLogging: boolean;\r\n  private eventHandlers: Map<string, Set<Function>>;\r\n\r\n  constructor(hubUrl: string = '/minimact', options: { reconnectInterval?: number; debugLogging?: boolean } = {}) {\r\n    this.reconnectInterval = options.reconnectInterval || 5000;\r\n    this.debugLogging = options.debugLogging || false;\r\n    this.eventHandlers = new Map();\r\n\r\n    this.connection = new HubConnectionBuilder()\r\n      .withUrl(hubUrl)\r\n      .withAutomaticReconnect({\r\n        nextRetryDelayInMilliseconds: () => this.reconnectInterval\r\n      })\r\n      .configureLogging(this.debugLogging ? LogLevel.Debug : LogLevel.Warning)\r\n      .build();\r\n\r\n    this.setupEventHandlers();\r\n  }\r\n\r\n  /**\r\n   * Setup SignalR event handlers\r\n   */\r\n  private setupEventHandlers(): void {\r\n    // Handle component updates from server\r\n    this.connection.on('UpdateComponent', (componentId: string, html: string) => {\r\n      this.log('UpdateComponent', { componentId, html });\r\n      this.emit('updateComponent', { componentId, html });\r\n    });\r\n\r\n    // Handle patch updates from server\r\n    this.connection.on('ApplyPatches', (componentId: string, patches: Patch[]) => {\r\n      this.log('ApplyPatches', { componentId, patches });\r\n      this.emit('applyPatches', { componentId, patches });\r\n    });\r\n\r\n    // Handle predicted patches (sent immediately for instant feedback)\r\n    this.connection.on('ApplyPrediction', (data: { componentId: string, patches: Patch[], confidence: number }) => {\r\n      this.log(`ApplyPrediction (${(data.confidence * 100).toFixed(0)}% confident)`, { componentId: data.componentId, patches: data.patches });\r\n      this.emit('applyPrediction', { componentId: data.componentId, patches: data.patches, confidence: data.confidence });\r\n    });\r\n\r\n    // Handle correction if prediction was wrong\r\n    this.connection.on('ApplyCorrection', (data: { componentId: string, patches: Patch[] }) => {\r\n      this.log('ApplyCorrection (prediction was incorrect)', { componentId: data.componentId, patches: data.patches });\r\n      this.emit('applyCorrection', { componentId: data.componentId, patches: data.patches });\r\n    });\r\n\r\n    // Handle hint queueing (usePredictHint)\r\n    this.connection.on('QueueHint', (data: {\r\n      componentId: string,\r\n      hintId: string,\r\n      patches: Patch[],\r\n      confidence: number,\r\n      predictedState: Record<string, any>\r\n    }) => {\r\n      this.log(`QueueHint '${data.hintId}' (${(data.confidence * 100).toFixed(0)}% confident)`, {\r\n        componentId: data.componentId,\r\n        patches: data.patches\r\n      });\r\n      this.emit('queueHint', data);\r\n    });\r\n\r\n    // Handle errors from server\r\n    this.connection.on('Error', (message: string) => {\r\n      console.error('[Minimact] Server error:', message);\r\n      this.emit('error', { message });\r\n    });\r\n\r\n    // Handle reconnection\r\n    this.connection.onreconnecting((error) => {\r\n      this.log('Reconnecting...', error);\r\n      this.emit('reconnecting', { error });\r\n    });\r\n\r\n    this.connection.onreconnected((connectionId) => {\r\n      this.log('Reconnected', { connectionId });\r\n      this.emit('reconnected', { connectionId });\r\n    });\r\n\r\n    this.connection.onclose((error) => {\r\n      this.log('Connection closed', error);\r\n      this.emit('closed', { error });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start the SignalR connection\r\n   */\r\n  async start(): Promise<void> {\r\n    try {\r\n      await this.connection.start();\r\n      this.log('Connected to Minimact hub');\r\n      this.emit('connected', { connectionId: this.connection.connectionId });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to connect:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop the SignalR connection\r\n   */\r\n  async stop(): Promise<void> {\r\n    await this.connection.stop();\r\n    this.log('Disconnected from Minimact hub');\r\n  }\r\n\r\n  /**\r\n   * Register a component with the server\r\n   */\r\n  async registerComponent(componentId: string): Promise<void> {\r\n    try {\r\n      await this.connection.invoke('RegisterComponent', componentId);\r\n      this.log('Registered component', { componentId });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to register component:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invoke a component method on the server\r\n   */\r\n  async invokeComponentMethod(componentId: string, methodName: string, args: any = {}): Promise<void> {\r\n    try {\r\n      const argsJson = JSON.stringify(args);\r\n      await this.connection.invoke('InvokeComponentMethod', componentId, methodName, argsJson);\r\n      this.log('Invoked method', { componentId, methodName, args });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to invoke method:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update client state on the server (single key-value)\r\n   */\r\n  async updateClientState(componentId: string, key: string, value: any): Promise<void> {\r\n    try {\r\n      const valueJson = JSON.stringify(value);\r\n      await this.connection.invoke('UpdateClientState', componentId, key, valueJson);\r\n      this.log('Updated client state', { componentId, key, value });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to update client state:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update multiple client-computed state values on the server\r\n   * Used for external library computations (lodash, moment, etc.)\r\n   */\r\n  async updateClientComputedState(componentId: string, computedValues: Record<string, any>): Promise<void> {\r\n    try {\r\n      await this.connection.invoke('UpdateClientComputedState', componentId, computedValues);\r\n      this.log('Updated client-computed state', { componentId, computedValues });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to update client-computed state:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update component state on the server (from useState hook)\r\n   * This keeps server state in sync with client state changes\r\n   */\r\n  async updateComponentState(componentId: string, stateKey: string, value: any): Promise<void> {\r\n    try {\r\n      await this.connection.invoke('UpdateComponentState', componentId, stateKey, value);\r\n      this.log('Updated component state', { componentId, stateKey, value });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to update component state:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update DOM element state on the server (from useDomElementState hook)\r\n   * This keeps server aware of DOM changes for accurate rendering\r\n   */\r\n  async updateDomElementState(componentId: string, stateKey: string, snapshot: any): Promise<void> {\r\n    try {\r\n      await this.connection.invoke('UpdateDomElementState', componentId, stateKey, snapshot);\r\n      this.log('Updated DOM element state', { componentId, stateKey, snapshot });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to update DOM element state:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update component state with array operation metadata\r\n   * This provides semantic intent for array mutations, enabling precise template extraction\r\n   */\r\n  async updateComponentStateWithOperation(\r\n    componentId: string,\r\n    stateKey: string,\r\n    newValue: any,\r\n    operation: ArrayOperation\r\n  ): Promise<void> {\r\n    try {\r\n      await this.connection.invoke('UpdateComponentStateWithOperation', componentId, stateKey, newValue, operation);\r\n      this.log('Updated component state with operation', { componentId, stateKey, operation, newValue });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to update component state with operation:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update query results on the server (from useDomQuery hook)\r\n   * This keeps server aware of query results for accurate rendering\r\n   */\r\n  async updateQueryResults(componentId: string, queryKey: string, results: any[]): Promise<void> {\r\n    try {\r\n      await this.connection.invoke('UpdateQueryResults', componentId, queryKey, results);\r\n      this.log('Updated query results', { componentId, queryKey, resultCount: results.length });\r\n    } catch (error) {\r\n      console.error('[Minimact] Failed to update query results:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generic invoke method for calling server hub methods\r\n   */\r\n  async invoke(methodName: string, ...args: any[]): Promise<void> {\r\n    try {\r\n      await this.connection.invoke(methodName, ...args);\r\n      this.log(`Invoked ${methodName}`, { args });\r\n    } catch (error) {\r\n      console.error(`[Minimact] Failed to invoke ${methodName}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribe to events\r\n   */\r\n  on(event: string, handler: Function): void {\r\n    if (!this.eventHandlers.has(event)) {\r\n      this.eventHandlers.set(event, new Set());\r\n    }\r\n    this.eventHandlers.get(event)!.add(handler);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from events\r\n   */\r\n  off(event: string, handler: Function): void {\r\n    const handlers = this.eventHandlers.get(event);\r\n    if (handlers) {\r\n      handlers.delete(handler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit event to subscribers\r\n   */\r\n  private emit(event: string, data: any): void {\r\n    const handlers = this.eventHandlers.get(event);\r\n    if (handlers) {\r\n      handlers.forEach(handler => handler(data));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Debug logging\r\n   */\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact SignalR] ${message}`, data || '');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get connection state\r\n   */\r\n  get state(): signalR.HubConnectionState {\r\n    return this.connection.state;\r\n  }\r\n\r\n  /**\r\n   * Get connection ID\r\n   */\r\n  get connectionId(): string | null {\r\n    return this.connection.connectionId;\r\n  }\r\n}\r\n","import { Patch, VNode, VElement, VText } from './types';\r\n\r\n/**\r\n * Applies DOM patches from the server to the actual DOM\r\n * Handles surgical updates for minimal DOM manipulation\r\n */\r\nexport class DOMPatcher {\r\n  private debugLogging: boolean;\r\n\r\n  constructor(options: { debugLogging?: boolean } = {}) {\r\n    this.debugLogging = options.debugLogging || false;\r\n  }\r\n\r\n  /**\r\n   * Apply an array of patches to a root element\r\n   */\r\n  applyPatches(rootElement: HTMLElement, patches: Patch[]): void {\r\n    this.log('Applying patches', { count: patches.length, patches });\r\n\r\n    for (const patch of patches) {\r\n      try {\r\n        this.applyPatch(rootElement, patch);\r\n      } catch (error) {\r\n        console.error('[Minimact] Failed to apply patch:', patch, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply a single patch to the DOM\r\n   */\r\n  private applyPatch(rootElement: HTMLElement, patch: Patch): void {\r\n    const targetElement = this.getElementByPath(rootElement, patch.path);\r\n\r\n    if (!targetElement && patch.type !== 'Create') {\r\n      console.warn('[Minimact] Target element not found for patch:', patch);\r\n      return;\r\n    }\r\n\r\n    switch (patch.type) {\r\n      case 'Create':\r\n        this.patchCreate(rootElement, patch.path, patch.node);\r\n        break;\r\n      case 'Remove':\r\n        this.patchRemove(targetElement!);\r\n        break;\r\n      case 'Replace':\r\n        this.patchReplace(targetElement!, patch.node);\r\n        break;\r\n      case 'UpdateText':\r\n        this.patchUpdateText(targetElement!, patch.content);\r\n        break;\r\n      case 'UpdateProps':\r\n        this.patchUpdateProps(targetElement as HTMLElement, patch.props);\r\n        break;\r\n      case 'ReorderChildren':\r\n        this.patchReorderChildren(targetElement as HTMLElement, patch.order);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create and insert a new node\r\n   */\r\n  private patchCreate(rootElement: HTMLElement, path: number[], node: VNode): void {\r\n    const newElement = this.createElementFromVNode(node);\r\n\r\n    if (path.length === 0) {\r\n      // Replace root\r\n      rootElement.innerHTML = '';\r\n      rootElement.appendChild(newElement);\r\n    } else {\r\n      // Insert at path\r\n      const parentPath = path.slice(0, -1);\r\n      const index = path[path.length - 1];\r\n      const parent = this.getElementByPath(rootElement, parentPath) as HTMLElement;\r\n\r\n      if (parent) {\r\n        if (index >= parent.childNodes.length) {\r\n          parent.appendChild(newElement);\r\n        } else {\r\n          parent.insertBefore(newElement, parent.childNodes[index]);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.log('Created node', { path, node });\r\n  }\r\n\r\n  /**\r\n   * Remove a node from the DOM\r\n   */\r\n  private patchRemove(element: Node): void {\r\n    if (element.parentNode) {\r\n      element.parentNode.removeChild(element);\r\n      this.log('Removed node', { element });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace a node with a new one\r\n   */\r\n  private patchReplace(oldElement: Node, newNode: VNode): void {\r\n    const newElement = this.createElementFromVNode(newNode);\r\n\r\n    if (oldElement.parentNode) {\r\n      oldElement.parentNode.replaceChild(newElement, oldElement);\r\n      this.log('Replaced node', { oldElement, newNode });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update text content of a text node\r\n   */\r\n  private patchUpdateText(element: Node, content: string): void {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n      element.textContent = content;\r\n    } else {\r\n      // If it's an element, update its text content\r\n      element.textContent = content;\r\n    }\r\n    this.log('Updated text', { element, content });\r\n  }\r\n\r\n  /**\r\n   * Update element properties/attributes\r\n   */\r\n  private patchUpdateProps(element: HTMLElement, props: Record<string, string>): void {\r\n    // Remove old attributes not in new props\r\n    const oldAttrs = Array.from(element.attributes);\r\n    for (const attr of oldAttrs) {\r\n      if (!(attr.name in props) && !attr.name.startsWith('data-minimact-')) {\r\n        element.removeAttribute(attr.name);\r\n      }\r\n    }\r\n\r\n    // Set new attributes\r\n    for (const [key, value] of Object.entries(props)) {\r\n      if (key === 'style') {\r\n        element.setAttribute('style', value);\r\n      } else if (key === 'class' || key === 'className') {\r\n        element.className = value;\r\n      } else if (key.startsWith('on')) {\r\n        // Event handlers are managed separately\r\n        continue;\r\n      } else {\r\n        element.setAttribute(key, value);\r\n      }\r\n    }\r\n\r\n    this.log('Updated props', { element, props });\r\n  }\r\n\r\n  /**\r\n   * Reorder children based on keys\r\n   */\r\n  private patchReorderChildren(element: HTMLElement, order: string[]): void {\r\n    const keyedChildren = new Map<string, Node>();\r\n\r\n    // Build map of keyed children\r\n    for (const child of Array.from(element.childNodes)) {\r\n      if (child instanceof HTMLElement) {\r\n        const key = child.getAttribute('data-key') || child.getAttribute('key');\r\n        if (key) {\r\n          keyedChildren.set(key, child);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reorder based on order array\r\n    for (let i = 0; i < order.length; i++) {\r\n      const key = order[i];\r\n      const child = keyedChildren.get(key);\r\n\r\n      if (child) {\r\n        const currentChild = element.childNodes[i];\r\n        if (currentChild !== child) {\r\n          element.insertBefore(child, currentChild);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.log('Reordered children', { element, order });\r\n  }\r\n\r\n  /**\r\n   * Get a DOM element by its path (array of indices)\r\n   */\r\n  private getElementByPath(rootElement: HTMLElement, path: number[]): Node | null {\r\n    let current: Node = rootElement;\r\n\r\n    for (const index of path) {\r\n      if (index >= current.childNodes.length) {\r\n        return null;\r\n      }\r\n      current = current.childNodes[index];\r\n    }\r\n\r\n    return current;\r\n  }\r\n\r\n  /**\r\n   * Create a DOM element from a VNode\r\n   */\r\n  private createElementFromVNode(vnode: VNode): Node {\r\n    switch (vnode.type) {\r\n      case 'Text':\r\n        return document.createTextNode((vnode as VText).content);\r\n\r\n      case 'Element': {\r\n        const velem = vnode as VElement;\r\n        const element = document.createElement(velem.tag);\r\n\r\n        // Set attributes\r\n        for (const [key, value] of Object.entries(velem.props || {})) {\r\n          if (key === 'className' || key === 'class') {\r\n            element.className = value;\r\n          } else if (key.startsWith('on')) {\r\n            // Event handlers will be attached by event delegation\r\n            element.setAttribute(`data-${key.toLowerCase()}`, value);\r\n          } else {\r\n            element.setAttribute(key, value);\r\n          }\r\n        }\r\n\r\n        // Set key if present\r\n        if (velem.key) {\r\n          element.setAttribute('data-key', velem.key);\r\n        }\r\n\r\n        // Create children\r\n        for (const child of velem.children || []) {\r\n          element.appendChild(this.createElementFromVNode(child));\r\n        }\r\n\r\n        return element;\r\n      }\r\n\r\n      case 'Fragment': {\r\n        const fragment = document.createDocumentFragment();\r\n        const vfrag = vnode as any;\r\n\r\n        for (const child of vfrag.children || []) {\r\n          fragment.appendChild(this.createElementFromVNode(child));\r\n        }\r\n\r\n        return fragment;\r\n      }\r\n\r\n      case 'RawHtml': {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = (vnode as any).html;\r\n        return div;\r\n      }\r\n\r\n      default:\r\n        console.warn('[Minimact] Unknown VNode type:', vnode);\r\n        return document.createTextNode('');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace entire HTML (fallback when patches aren't available)\r\n   */\r\n  replaceHTML(rootElement: HTMLElement, html: string): void {\r\n    rootElement.innerHTML = html;\r\n    this.log('Replaced entire HTML', { html });\r\n  }\r\n\r\n  /**\r\n   * Debug logging\r\n   */\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact DOMPatcher] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n","import { ComponentState } from './types';\r\n\r\n/**\r\n * Manages client-side state (useClientState) with reactive updates\r\n * Handles local state that doesn't require server round-trips\r\n */\r\nexport class ClientStateManager {\r\n  private states: Map<string, ComponentState>;\r\n  private subscribers: Map<string, Map<string, Set<Function>>>;\r\n  private debugLogging: boolean;\r\n\r\n  constructor(options: { debugLogging?: boolean } = {}) {\r\n    this.states = new Map();\r\n    this.subscribers = new Map();\r\n    this.debugLogging = options.debugLogging || false;\r\n  }\r\n\r\n  /**\r\n   * Initialize client state for a component\r\n   */\r\n  initializeComponent(componentId: string, initialState: ComponentState = {}): void {\r\n    this.states.set(componentId, { ...initialState });\r\n    this.subscribers.set(componentId, new Map());\r\n    this.log('Initialized component state', { componentId, initialState });\r\n  }\r\n\r\n  /**\r\n   * Get client state value\r\n   */\r\n  getState(componentId: string, key: string): any {\r\n    const componentState = this.states.get(componentId);\r\n    return componentState ? componentState[key] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Set client state value and trigger updates\r\n   */\r\n  setState(componentId: string, key: string, value: any): void {\r\n    const componentState = this.states.get(componentId);\r\n\r\n    if (!componentState) {\r\n      console.warn(`[Minimact] Component ${componentId} not initialized`);\r\n      return;\r\n    }\r\n\r\n    // Update state\r\n    const oldValue = componentState[key];\r\n    componentState[key] = value;\r\n\r\n    this.log('State updated', { componentId, key, oldValue, newValue: value });\r\n\r\n    // Notify subscribers\r\n    this.notifySubscribers(componentId, key, value, oldValue);\r\n  }\r\n\r\n  /**\r\n   * Subscribe to state changes\r\n   */\r\n  subscribe(componentId: string, key: string, callback: (value: any, oldValue: any) => void): () => void {\r\n    const componentSubscribers = this.subscribers.get(componentId);\r\n\r\n    if (!componentSubscribers) {\r\n      console.warn(`[Minimact] Component ${componentId} not initialized`);\r\n      return () => {};\r\n    }\r\n\r\n    if (!componentSubscribers.has(key)) {\r\n      componentSubscribers.set(key, new Set());\r\n    }\r\n\r\n    componentSubscribers.get(key)!.add(callback);\r\n    this.log('Subscribed to state', { componentId, key });\r\n\r\n    // Return unsubscribe function\r\n    return () => {\r\n      componentSubscribers.get(key)?.delete(callback);\r\n      this.log('Unsubscribed from state', { componentId, key });\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Notify all subscribers of a state change\r\n   */\r\n  private notifySubscribers(componentId: string, key: string, value: any, oldValue: any): void {\r\n    const componentSubscribers = this.subscribers.get(componentId);\r\n\r\n    if (!componentSubscribers) {\r\n      return;\r\n    }\r\n\r\n    const keySubscribers = componentSubscribers.get(key);\r\n\r\n    if (keySubscribers) {\r\n      keySubscribers.forEach(callback => {\r\n        try {\r\n          callback(value, oldValue);\r\n        } catch (error) {\r\n          console.error('[Minimact] Error in state subscriber:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all state for a component\r\n   */\r\n  getComponentState(componentId: string): ComponentState | undefined {\r\n    return this.states.get(componentId);\r\n  }\r\n\r\n  /**\r\n   * Update multiple state values at once\r\n   */\r\n  updateState(componentId: string, updates: ComponentState): void {\r\n    for (const [key, value] of Object.entries(updates)) {\r\n      this.setState(componentId, key, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear state for a component\r\n   */\r\n  clearComponent(componentId: string): void {\r\n    this.states.delete(componentId);\r\n    this.subscribers.delete(componentId);\r\n    this.log('Cleared component state', { componentId });\r\n  }\r\n\r\n  /**\r\n   * Bind state to a DOM element's value/content\r\n   */\r\n  bindToElement(\r\n    componentId: string,\r\n    key: string,\r\n    element: HTMLElement,\r\n    property: 'value' | 'textContent' | 'innerHTML' = 'textContent'\r\n  ): () => void {\r\n    // Set initial value\r\n    const initialValue = this.getState(componentId, key);\r\n    if (initialValue !== undefined) {\r\n      this.updateElement(element, property, initialValue);\r\n    }\r\n\r\n    // Subscribe to changes\r\n    return this.subscribe(componentId, key, (value) => {\r\n      this.updateElement(element, property, value);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update a DOM element based on property type\r\n   */\r\n  private updateElement(element: HTMLElement, property: string, value: any): void {\r\n    switch (property) {\r\n      case 'value':\r\n        if (element instanceof HTMLInputElement ||\r\n            element instanceof HTMLTextAreaElement ||\r\n            element instanceof HTMLSelectElement) {\r\n          element.value = String(value);\r\n        }\r\n        break;\r\n      case 'textContent':\r\n        element.textContent = String(value);\r\n        break;\r\n      case 'innerHTML':\r\n        element.innerHTML = String(value);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind input element to state (two-way binding)\r\n   */\r\n  bindInput(componentId: string, key: string, input: HTMLInputElement | HTMLTextAreaElement): () => void {\r\n    // Set initial value\r\n    const initialValue = this.getState(componentId, key);\r\n    if (initialValue !== undefined) {\r\n      input.value = String(initialValue);\r\n    }\r\n\r\n    // Listen to input changes\r\n    const inputHandler = (e: Event) => {\r\n      const target = e.target as HTMLInputElement | HTMLTextAreaElement;\r\n      this.setState(componentId, key, target.value);\r\n    };\r\n\r\n    input.addEventListener('input', inputHandler);\r\n\r\n    // Subscribe to state changes from other sources\r\n    const unsubscribe = this.subscribe(componentId, key, (value) => {\r\n      if (input.value !== String(value)) {\r\n        input.value = String(value);\r\n      }\r\n    });\r\n\r\n    // Return cleanup function\r\n    return () => {\r\n      input.removeEventListener('input', inputHandler);\r\n      unsubscribe();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Debug logging\r\n   */\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact ClientState] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n","import type { HintQueue } from './hint-queue';\r\nimport type { DOMPatcher } from './dom-patcher';\r\nimport type { PlaygroundBridge } from './playground-bridge';\r\n\r\n/**\r\n * Event delegation system for handling component events\r\n * Uses a single root listener for performance\r\n */\r\nexport class EventDelegation {\r\n  private rootElement: HTMLElement;\r\n  private componentMethodInvoker: (componentId: string, methodName: string, args?: any) => Promise<void>;\r\n  private debugLogging: boolean;\r\n  private eventListeners: Map<string, EventListener>;\r\n  private hintQueue?: HintQueue;\r\n  private domPatcher?: DOMPatcher;\r\n  private playgroundBridge?: PlaygroundBridge;\r\n\r\n  constructor(\r\n    rootElement: HTMLElement,\r\n    componentMethodInvoker: (componentId: string, methodName: string, args?: any) => Promise<void>,\r\n    options: {\r\n      debugLogging?: boolean;\r\n      hintQueue?: HintQueue;\r\n      domPatcher?: DOMPatcher;\r\n      playgroundBridge?: PlaygroundBridge;\r\n    } = {}\r\n  ) {\r\n    this.rootElement = rootElement;\r\n    this.componentMethodInvoker = componentMethodInvoker;\r\n    this.debugLogging = options.debugLogging || false;\r\n    this.hintQueue = options.hintQueue;\r\n    this.domPatcher = options.domPatcher;\r\n    this.playgroundBridge = options.playgroundBridge;\r\n    this.eventListeners = new Map();\r\n\r\n    this.setupEventDelegation();\r\n  }\r\n\r\n  /**\r\n   * Setup event delegation for common events\r\n   */\r\n  private setupEventDelegation(): void {\r\n    const eventTypes = [\r\n      'click',\r\n      'dblclick',\r\n      'input',\r\n      'change',\r\n      'submit',\r\n      'focus',\r\n      'blur',\r\n      'keydown',\r\n      'keyup',\r\n      'keypress',\r\n      'mouseenter',\r\n      'mouseleave',\r\n      'mouseover',\r\n      'mouseout'\r\n    ];\r\n\r\n    for (const eventType of eventTypes) {\r\n      const listener = this.createEventListener(eventType);\r\n      this.eventListeners.set(eventType, listener);\r\n      this.rootElement.addEventListener(eventType, listener, true); // Use capture phase\r\n    }\r\n\r\n    this.log('Event delegation setup complete', { eventTypes });\r\n  }\r\n\r\n  /**\r\n   * Create an event listener for a specific event type\r\n   */\r\n  private createEventListener(eventType: string): EventListener {\r\n    return async (event: Event) => {\r\n      const target = event.target as HTMLElement;\r\n\r\n      // Find the nearest element with an event handler\r\n      const handlerElement = this.findHandlerElement(target, eventType);\r\n\r\n      if (!handlerElement) {\r\n        return;\r\n      }\r\n\r\n      // Get handler information\r\n      const handler = this.getEventHandler(handlerElement, eventType);\r\n\r\n      if (!handler) {\r\n        return;\r\n      }\r\n\r\n      // Prevent default for submit events\r\n      if (eventType === 'submit') {\r\n        event.preventDefault();\r\n      }\r\n\r\n      this.log('Event triggered', { eventType, handler, target });\r\n\r\n      // Execute handler\r\n      await this.executeHandler(handler, event, handlerElement);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find the nearest element with an event handler attribute\r\n   */\r\n  private findHandlerElement(element: HTMLElement | null, eventType: string): HTMLElement | null {\r\n    let current = element;\r\n\r\n    while (current && current !== this.rootElement) {\r\n      const attrName = `data-on${eventType}`;\r\n      const legacyAttrName = `on${eventType}`;\r\n\r\n      if (current.hasAttribute(attrName) || current.hasAttribute(legacyAttrName)) {\r\n        return current;\r\n      }\r\n\r\n      current = current.parentElement;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get event handler information from element\r\n   */\r\n  private getEventHandler(element: HTMLElement, eventType: string): EventHandler | null {\r\n    const attrName = `data-on${eventType}`;\r\n    const legacyAttrName = `on${eventType}`;\r\n\r\n    const handlerStr = element.getAttribute(attrName) || element.getAttribute(legacyAttrName);\r\n\r\n    if (!handlerStr) {\r\n      return null;\r\n    }\r\n\r\n    // Parse handler string\r\n    // Format: \"MethodName\" or \"MethodName:arg1:arg2\"\r\n    const parts = handlerStr.split(':');\r\n    const methodName = parts[0];\r\n    const args = parts.slice(1);\r\n\r\n    // Find component ID\r\n    const componentId = this.findComponentId(element);\r\n\r\n    if (!componentId) {\r\n      console.warn('[Minimact] No component ID found for event handler:', handlerStr);\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      componentId,\r\n      methodName,\r\n      args\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Find the component ID for an element\r\n   */\r\n  private findComponentId(element: HTMLElement | null): string | null {\r\n    let current = element;\r\n\r\n    while (current && current !== this.rootElement) {\r\n      const componentId = current.getAttribute('data-minimact-component-id');\r\n      if (componentId) {\r\n        return componentId;\r\n      }\r\n\r\n      current = current.parentElement;\r\n    }\r\n\r\n    // Check root element\r\n    const rootComponentId = this.rootElement.getAttribute('data-minimact-component-id');\r\n    return rootComponentId;\r\n  }\r\n\r\n  /**\r\n   * Execute an event handler\r\n   */\r\n  private async executeHandler(handler: EventHandler, event: Event, element: HTMLElement): Promise<void> {\r\n    const startTime = performance.now();\r\n\r\n    try {\r\n      // Build args object\r\n      const argsObj: any = {};\r\n\r\n      // Add parsed args from handler string\r\n      if (handler.args.length > 0) {\r\n        argsObj.args = handler.args;\r\n      }\r\n\r\n      // Add event data\r\n      if (event instanceof MouseEvent) {\r\n        argsObj.mouse = {\r\n          clientX: event.clientX,\r\n          clientY: event.clientY,\r\n          button: event.button\r\n        };\r\n      }\r\n\r\n      if (event instanceof KeyboardEvent) {\r\n        argsObj.keyboard = {\r\n          key: event.key,\r\n          code: event.code,\r\n          ctrlKey: event.ctrlKey,\r\n          shiftKey: event.shiftKey,\r\n          altKey: event.altKey\r\n        };\r\n      }\r\n\r\n      // Add target value for input events\r\n      if (event.type === 'input' || event.type === 'change') {\r\n        const target = event.target as HTMLInputElement;\r\n        argsObj.value = target.value;\r\n      }\r\n\r\n      // Convert argsObj to array format expected by server\r\n      // Server expects: object[] args, so we pass the actual argument values as an array\r\n      const argsArray: any[] = [];\r\n\r\n      // For input/change events, pass the value as the first argument\r\n      if (argsObj.value !== undefined) {\r\n        argsArray.push(argsObj.value);\r\n      }\r\n\r\n      // For handlers with explicit args, add those\r\n      if (argsObj.args && Array.isArray(argsObj.args)) {\r\n        argsArray.push(...argsObj.args);\r\n      }\r\n\r\n      // Check hint queue for cached prediction (CACHE HIT!)\r\n      if (this.hintQueue && this.domPatcher) {\r\n        // Build hint ID based on method name (simplified - in production would be more sophisticated)\r\n        const hintId = `${handler.methodName}`;\r\n\r\n        // Try to match hint based on the method being called\r\n        // This is a simplified version - in reality we'd need to know the state change\r\n        const matchedHint = this.tryMatchHint(handler.componentId, handler.methodName);\r\n\r\n        if (matchedHint) {\r\n          // 🟢 CACHE HIT! Apply patches instantly\r\n          const componentElement = this.findComponentElement(handler.componentId);\r\n          if (componentElement) {\r\n            this.domPatcher.applyPatches(componentElement, matchedHint.patches as any[]);\r\n\r\n            const latency = performance.now() - startTime;\r\n\r\n            // Notify playground of cache hit\r\n            if (this.playgroundBridge) {\r\n              this.playgroundBridge.cacheHit({\r\n                componentId: handler.componentId,\r\n                hintId: matchedHint.hintId,\r\n                latency,\r\n                confidence: matchedHint.confidence,\r\n                patchCount: matchedHint.patches.length\r\n              });\r\n            }\r\n\r\n            this.log(`🟢 CACHE HIT! Applied ${matchedHint.patches.length} patches in ${latency.toFixed(2)}ms`, {\r\n              handler,\r\n              confidence: (matchedHint.confidence * 100).toFixed(0) + '%'\r\n            });\r\n\r\n            // Still notify server in background for verification\r\n            this.componentMethodInvoker(handler.componentId, handler.methodName, argsArray).catch(err => {\r\n              console.error('[Minimact] Background server notification failed:', err);\r\n            });\r\n\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      // 🔴 CACHE MISS - No prediction found, send to server\r\n      await this.componentMethodInvoker(handler.componentId, handler.methodName, argsArray);\r\n\r\n      const latency = performance.now() - startTime;\r\n\r\n      // Notify playground of cache miss\r\n      if (this.playgroundBridge) {\r\n        this.playgroundBridge.cacheMiss({\r\n          componentId: handler.componentId,\r\n          methodName: handler.methodName,\r\n          latency,\r\n          patchCount: 0 // We don't know patch count in this flow\r\n        });\r\n      }\r\n\r\n      this.log(`🔴 CACHE MISS - Server latency: ${latency.toFixed(2)}ms`, { handler, argsObj });\r\n    } catch (error) {\r\n      console.error('[Minimact] Error executing handler:', handler, error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Try to match a hint in the queue for this method invocation\r\n   * Simplified version - checks if there's a hint matching the method name\r\n   */\r\n  private tryMatchHint(componentId: string, methodName: string): { hintId: string; patches: any[]; confidence: number } | null {\r\n    if (!this.hintQueue) return null;\r\n\r\n    // In a real implementation, we'd need to build the predicted state change\r\n    // For now, we'll use a simplified heuristic based on method name\r\n    // The server sends hints with IDs like \"count_1\" for count going to 1\r\n\r\n    // Try to match by checking all hints for this component\r\n    // This is a placeholder - the actual matching logic would be more sophisticated\r\n    return null; // TODO: Implement proper hint matching\r\n  }\r\n\r\n  /**\r\n   * Find the component element by component ID\r\n   */\r\n  private findComponentElement(componentId: string): HTMLElement | null {\r\n    const element = this.rootElement.querySelector(`[data-minimact-component-id=\"${componentId}\"]`);\r\n    return element as HTMLElement;\r\n  }\r\n\r\n  /**\r\n   * Cleanup event listeners\r\n   */\r\n  destroy(): void {\r\n    for (const [eventType, listener] of this.eventListeners.entries()) {\r\n      this.rootElement.removeEventListener(eventType, listener, true);\r\n    }\r\n    this.eventListeners.clear();\r\n    this.log('Event delegation destroyed');\r\n  }\r\n\r\n  /**\r\n   * Debug logging\r\n   */\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact EventDelegation] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n\r\ninterface EventHandler {\r\n  componentId: string;\r\n  methodName: string;\r\n  args: string[];\r\n}\r\n","import { ComponentMetadata } from './types';\r\nimport { ClientStateManager } from './client-state';\r\n\r\n/**\r\n * Handles hydration of server-rendered HTML with client interactivity\r\n * Identifies and manages client zones, server zones, and hybrid zones\r\n */\r\nexport class HydrationManager {\r\n  private clientState: ClientStateManager;\r\n  private components: Map<string, ComponentMetadata>;\r\n  private debugLogging: boolean;\r\n\r\n  constructor(clientState: ClientStateManager, options: { debugLogging?: boolean } = {}) {\r\n    this.clientState = clientState;\r\n    this.components = new Map();\r\n    this.debugLogging = options.debugLogging || false;\r\n  }\r\n\r\n  /**\r\n   * Hydrate a component root element\r\n   */\r\n  hydrateComponent(componentId: string, rootElement: HTMLElement): void {\r\n    this.log('Hydrating component', { componentId });\r\n\r\n    // The actual component element is the first child of the container\r\n    // (rootElement is #minimact-root, first child is the actual component div)\r\n    const componentElement = rootElement.firstElementChild as HTMLElement;\r\n    if (!componentElement) {\r\n      console.error('[Minimact Hydration] No component element found in root');\r\n      return;\r\n    }\r\n\r\n    // Create component metadata\r\n    const metadata: ComponentMetadata = {\r\n      componentId,\r\n      element: componentElement,  // Use the actual component element, not the container\r\n      clientState: {},\r\n      serverState: {}\r\n    };\r\n\r\n    this.components.set(componentId, metadata);\r\n\r\n    // Set component ID on root element\r\n    rootElement.setAttribute('data-minimact-component-id', componentId);\r\n\r\n    // Initialize client state\r\n    this.clientState.initializeComponent(componentId);\r\n\r\n    // Find and hydrate client zones\r\n    this.hydrateClientZones(componentId, rootElement);\r\n\r\n    // Find and bind state to elements\r\n    this.bindStateElements(componentId, rootElement);\r\n\r\n    this.log('Component hydrated', { componentId, metadata });\r\n  }\r\n\r\n  /**\r\n   * Hydrate client-only zones (data-minimact-client-scope)\r\n   */\r\n  private hydrateClientZones(componentId: string, rootElement: HTMLElement): void {\r\n    const clientZones = rootElement.querySelectorAll('[data-minimact-client-scope]');\r\n\r\n    this.log('Found client zones', { count: clientZones.length });\r\n\r\n    clientZones.forEach((zone) => {\r\n      const element = zone as HTMLElement;\r\n\r\n      // Get state name if specified\r\n      const stateName = element.getAttribute('data-state');\r\n\r\n      if (stateName) {\r\n        // Initialize state from element\r\n        const initialValue = this.getInitialValue(element);\r\n        this.clientState.setState(componentId, stateName, initialValue);\r\n\r\n        // Bind element to state\r\n        if (element instanceof HTMLInputElement ||\r\n            element instanceof HTMLTextAreaElement ||\r\n            element instanceof HTMLSelectElement) {\r\n          this.clientState.bindInput(componentId, stateName, element);\r\n        }\r\n\r\n        this.log('Hydrated client zone', { element, stateName, initialValue });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Bind elements with data-bind attribute to state\r\n   */\r\n  private bindStateElements(componentId: string, rootElement: HTMLElement): void {\r\n    const boundElements = rootElement.querySelectorAll('[data-bind]');\r\n\r\n    this.log('Found bound elements', { count: boundElements.length });\r\n\r\n    boundElements.forEach((elem) => {\r\n      const element = elem as HTMLElement;\r\n      const bindKey = element.getAttribute('data-bind');\r\n\r\n      if (!bindKey) {\r\n        return;\r\n      }\r\n\r\n      // Determine binding type\r\n      const isClientScope = this.isInClientScope(element);\r\n      const bindProperty = this.determineBindProperty(element);\r\n\r\n      if (isClientScope) {\r\n        // Client-side binding\r\n        this.clientState.bindToElement(componentId, bindKey, element, bindProperty);\r\n        this.log('Bound to client state', { element, bindKey, bindProperty });\r\n      } else {\r\n        // Server-side binding - will be updated via patches\r\n        this.log('Server-bound element (patch-controlled)', { element, bindKey });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if an element is within a client scope\r\n   */\r\n  private isInClientScope(element: HTMLElement): boolean {\r\n    let current: HTMLElement | null = element;\r\n\r\n    while (current) {\r\n      if (current.hasAttribute('data-minimact-client-scope')) {\r\n        return true;\r\n      }\r\n      if (current.hasAttribute('data-minimact-server-scope')) {\r\n        return false;\r\n      }\r\n      current = current.parentElement;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determine which property to bind (value, textContent, innerHTML)\r\n   */\r\n  private determineBindProperty(element: HTMLElement): 'value' | 'textContent' | 'innerHTML' {\r\n    if (element instanceof HTMLInputElement ||\r\n        element instanceof HTMLTextAreaElement ||\r\n        element instanceof HTMLSelectElement) {\r\n      return 'value';\r\n    }\r\n\r\n    if (element.hasAttribute('data-bind-html')) {\r\n      return 'innerHTML';\r\n    }\r\n\r\n    return 'textContent';\r\n  }\r\n\r\n  /**\r\n   * Get initial value from an element\r\n   */\r\n  private getInitialValue(element: HTMLElement): any {\r\n    if (element instanceof HTMLInputElement) {\r\n      if (element.type === 'checkbox') {\r\n        return element.checked;\r\n      } else if (element.type === 'number') {\r\n        return element.valueAsNumber || 0;\r\n      } else {\r\n        return element.value;\r\n      }\r\n    }\r\n\r\n    if (element instanceof HTMLTextAreaElement) {\r\n      return element.value;\r\n    }\r\n\r\n    if (element instanceof HTMLSelectElement) {\r\n      return element.value;\r\n    }\r\n\r\n    return element.textContent || '';\r\n  }\r\n\r\n  /**\r\n   * Dehydrate (cleanup) a component\r\n   */\r\n  dehydrateComponent(componentId: string): void {\r\n    const metadata = this.components.get(componentId);\r\n\r\n    if (!metadata) {\r\n      return;\r\n    }\r\n\r\n    // Clear client state\r\n    this.clientState.clearComponent(componentId);\r\n\r\n    // Remove from registry\r\n    this.components.delete(componentId);\r\n\r\n    this.log('Component dehydrated', { componentId });\r\n  }\r\n\r\n  /**\r\n   * Get component metadata\r\n   */\r\n  getComponent(componentId: string): ComponentMetadata | undefined {\r\n    return this.components.get(componentId);\r\n  }\r\n\r\n  /**\r\n   * Update server state for a component\r\n   */\r\n  updateServerState(componentId: string, key: string, value: any): void {\r\n    const metadata = this.components.get(componentId);\r\n\r\n    if (metadata) {\r\n      metadata.serverState[key] = value;\r\n      this.log('Updated server state', { componentId, key, value });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hydrate all components on the page\r\n   */\r\n  hydrateAll(): void {\r\n    const components = document.querySelectorAll('[data-minimact-component]');\r\n\r\n    this.log('Hydrating all components', { count: components.length });\r\n\r\n    components.forEach((element) => {\r\n      const componentId = element.getAttribute('data-minimact-component');\r\n      if (componentId) {\r\n        this.hydrateComponent(componentId, element as HTMLElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Debug logging\r\n   */\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact Hydration] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n","import { TemplatePatch, Patch, LoopTemplate, ItemTemplate, VNode, VElement, VText, Binding } from './types';\r\n\r\n/**\r\n * Template Renderer\r\n *\r\n * Renders template patches with parameter values for runtime predictions.\r\n * Enables 98% memory reduction by storing patterns instead of concrete values.\r\n *\r\n * Example:\r\n *   template: \"Count: {0}\"\r\n *   params: [42]\r\n *   result: \"Count: 42\"\r\n */\r\nexport class TemplateRenderer {\r\n  /**\r\n   * Render a template string with parameters\r\n   *\r\n   * @param template - Template string with {0}, {1}, etc. placeholders\r\n   * @param params - Parameter values to substitute\r\n   * @returns Rendered string with parameters substituted\r\n   *\r\n   * @example\r\n   * renderTemplate(\"Count: {0}\", [42]) → \"Count: 42\"\r\n   * renderTemplate(\"Hello, {0} {1}!\", [\"John\", \"Doe\"]) → \"Hello, John Doe!\"\r\n   */\r\n  static renderTemplate(template: string, params: any[]): string {\r\n    let result = template;\r\n\r\n    // Replace each placeholder {0}, {1}, etc. with corresponding parameter\r\n    params.forEach((param, index) => {\r\n      const placeholder = `{${index}}`;\r\n      const value = this.formatValue(param);\r\n      result = result.replace(placeholder, value);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Render a template patch with current state values\r\n   *\r\n   * @param templatePatch - Template patch data\r\n   * @param stateValues - Current state values (key-value pairs)\r\n   * @returns Rendered string\r\n   *\r\n   * @example\r\n   * const tp = { template: \"Count: {0}\", bindings: [\"count\"], slots: [7] };\r\n   * renderTemplatePatch(tp, { count: 42 }) → \"Count: 42\"\r\n   *\r\n   * @example Conditional\r\n   * const tp = {\r\n   *   template: \"{0}\",\r\n   *   bindings: [\"isActive\"],\r\n   *   conditionalTemplates: { \"true\": \"Active\", \"false\": \"Inactive\" },\r\n   *   conditionalBindingIndex: 0\r\n   * };\r\n   * renderTemplatePatch(tp, { isActive: true }) → \"Active\"\r\n   */\r\n  static renderTemplatePatch(\r\n    templatePatch: TemplatePatch,\r\n    stateValues: Record<string, any>\r\n  ): string {\r\n    // Check for conditional templates\r\n    if (templatePatch.conditionalTemplates && templatePatch.conditionalBindingIndex !== undefined) {\r\n      const bindingIndex = templatePatch.conditionalBindingIndex;\r\n      const conditionBinding = templatePatch.bindings[bindingIndex];\r\n\r\n      // Get condition value (handle both string and Binding object)\r\n      const conditionKey = typeof conditionBinding === 'object' && 'stateKey' in conditionBinding\r\n        ? conditionBinding.stateKey\r\n        : conditionBinding as string;\r\n      const conditionValue = stateValues[conditionKey];\r\n\r\n      // Lookup the template for this condition value\r\n      const conditionalTemplate = templatePatch.conditionalTemplates[String(conditionValue)];\r\n\r\n      if (conditionalTemplate !== undefined) {\r\n        // If it's a simple conditional (just maps to string), return it\r\n        if (!conditionalTemplate.includes('{')) {\r\n          return conditionalTemplate;\r\n        }\r\n\r\n        // Otherwise, it's a conditional template with other bindings\r\n        // Apply transforms if present\r\n        const params = templatePatch.bindings.map(binding => {\r\n          if (typeof binding === 'object' && 'stateKey' in binding) {\r\n            const value = stateValues[binding.stateKey];\r\n            return binding.transform ? this.applyTransform(value, binding.transform) : value;\r\n          }\r\n          return stateValues[binding as string];\r\n        });\r\n        return this.renderTemplate(conditionalTemplate, params);\r\n      }\r\n    }\r\n\r\n    // Standard template rendering\r\n    const params = templatePatch.bindings.map((binding, index) => {\r\n      // Phase 6: Support Binding objects with transforms\r\n      if (typeof binding === 'object' && 'stateKey' in binding) {\r\n        const value = stateValues[binding.stateKey];\r\n\r\n        // Apply transform if present\r\n        if (binding.transform) {\r\n          return this.applyTransform(value, binding.transform);\r\n        }\r\n\r\n        return value;\r\n      }\r\n\r\n      // Backward compatibility: Simple string binding\r\n      return stateValues[binding as string];\r\n    });\r\n\r\n    return this.renderTemplate(templatePatch.template, params);\r\n  }\r\n\r\n  /**\r\n   * Convert a template patch to concrete patch(es) with current state\r\n   *\r\n   * @param patch - Template patch (UpdateTextTemplate, UpdatePropsTemplate, or UpdateListTemplate)\r\n   * @param stateValues - Current state values\r\n   * @returns Concrete patch or array of patches\r\n   *\r\n   * @example\r\n   * const patch = {\r\n   *   type: 'UpdateTextTemplate',\r\n   *   path: [0, 0],\r\n   *   templatePatch: { template: \"Count: {0}\", bindings: [\"count\"], slots: [7] }\r\n   * };\r\n   * materializePatch(patch, { count: 42 })\r\n   * → { type: 'UpdateText', path: [0, 0], content: \"Count: 42\" }\r\n   */\r\n  static materializePatch(\r\n    patch: Patch,\r\n    stateValues: Record<string, any>\r\n  ): Patch | Patch[] {\r\n    switch (patch.type) {\r\n      case 'UpdateTextTemplate': {\r\n        const content = this.renderTemplatePatch(patch.templatePatch, stateValues);\r\n        return {\r\n          type: 'UpdateText',\r\n          path: patch.path,\r\n          content\r\n        };\r\n      }\r\n\r\n      case 'UpdatePropsTemplate': {\r\n        const value = this.renderTemplatePatch(patch.templatePatch, stateValues);\r\n        return {\r\n          type: 'UpdateProps',\r\n          path: patch.path,\r\n          props: { [patch.propName]: value }\r\n        };\r\n      }\r\n\r\n      case 'UpdateListTemplate': {\r\n        // Render loop template to VNodes\r\n        const vnodes = this.renderLoopTemplate(patch.loopTemplate, stateValues);\r\n\r\n        // Convert to concrete patches\r\n        return this.convertLoopToPatches(patch.path, vnodes);\r\n      }\r\n\r\n      default:\r\n        // Not a template patch, return as-is\r\n        return patch;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Materialize multiple template patches\r\n   *\r\n   * @param patches - Array of patches (template or concrete)\r\n   * @param stateValues - Current state values\r\n   * @returns Array of concrete patches\r\n   */\r\n  static materializePatches(\r\n    patches: Patch[],\r\n    stateValues: Record<string, any>\r\n  ): Patch[] {\r\n    const materialized: Patch[] = [];\r\n\r\n    for (const patch of patches) {\r\n      const result = this.materializePatch(patch, stateValues);\r\n\r\n      if (Array.isArray(result)) {\r\n        // UpdateListTemplate returns multiple patches\r\n        materialized.push(...result);\r\n      } else {\r\n        materialized.push(result);\r\n      }\r\n    }\r\n\r\n    return materialized;\r\n  }\r\n\r\n  /**\r\n   * Apply transform to a value (Phase 6: Expression Templates)\r\n   * Security: Only whitelisted transforms are allowed\r\n   *\r\n   * @param value - Raw value from state\r\n   * @param transform - Transform string (e.g., \"toFixed(2)\", \"* 100\", \"toUpperCase()\")\r\n   * @returns Transformed value\r\n   *\r\n   * @example\r\n   * applyTransform(99.95, \"toFixed(2)\") → \"99.95\"\r\n   * applyTransform(0.847, \"* 100\") → 84.7\r\n   * applyTransform(\"hello\", \"toUpperCase()\") → \"HELLO\"\r\n   */\r\n  static applyTransform(value: any, transform: string): any {\r\n    // Security: Whitelist-only approach for safe transforms\r\n\r\n    // toFixed(n) - Format number to n decimal places\r\n    if (transform.startsWith('toFixed(')) {\r\n      const decimals = parseInt(transform.match(/\\d+/)?.[0] || '0');\r\n      return Number(value).toFixed(decimals);\r\n    }\r\n\r\n    // Arithmetic: * N (multiplication)\r\n    if (transform.startsWith('* ')) {\r\n      const multiplier = parseFloat(transform.substring(2));\r\n      return Number(value) * multiplier;\r\n    }\r\n\r\n    // Arithmetic: / N (division)\r\n    if (transform.startsWith('/ ')) {\r\n      const divisor = parseFloat(transform.substring(2));\r\n      return Number(value) / divisor;\r\n    }\r\n\r\n    // Arithmetic: + N (addition)\r\n    if (transform.startsWith('+ ')) {\r\n      const addend = parseFloat(transform.substring(2));\r\n      return Number(value) + addend;\r\n    }\r\n\r\n    // Arithmetic: - N (subtraction)\r\n    if (transform.startsWith('- ')) {\r\n      const subtrahend = parseFloat(transform.substring(2));\r\n      return Number(value) - subtrahend;\r\n    }\r\n\r\n    // String: toUpperCase()\r\n    if (transform === 'toUpperCase()' || transform === 'toUpperCase') {\r\n      return String(value).toUpperCase();\r\n    }\r\n\r\n    // String: toLowerCase()\r\n    if (transform === 'toLowerCase()' || transform === 'toLowerCase') {\r\n      return String(value).toLowerCase();\r\n    }\r\n\r\n    // String: trim()\r\n    if (transform === 'trim()' || transform === 'trim') {\r\n      return String(value).trim();\r\n    }\r\n\r\n    // Boolean: ! (negation)\r\n    if (transform === '!') {\r\n      return !value;\r\n    }\r\n\r\n    // Default: Unknown transform, log warning and return value as-is\r\n    console.warn(`[TemplateRenderer] Unknown transform: ${transform}`);\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Format a value for template substitution\r\n   *\r\n   * @param value - Value to format\r\n   * @returns String representation of value\r\n   */\r\n  private static formatValue(value: any): string {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      return value;\r\n    }\r\n\r\n    if (typeof value === 'number' || typeof value === 'boolean') {\r\n      return String(value);\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n      return value.map(v => this.formatValue(v)).join(', ');\r\n    }\r\n\r\n    if (typeof value === 'object') {\r\n      // For objects, use JSON.stringify (could be customized)\r\n      return JSON.stringify(value);\r\n    }\r\n\r\n    return String(value);\r\n  }\r\n\r\n  /**\r\n   * Check if a patch is a template patch\r\n   *\r\n   * @param patch - Patch to check\r\n   * @returns True if patch is a template patch\r\n   */\r\n  static isTemplatePatch(patch: Patch): boolean {\r\n    return patch.type === 'UpdateTextTemplate' || patch.type === 'UpdatePropsTemplate';\r\n  }\r\n\r\n  /**\r\n   * Extract bindings from a template patch\r\n   *\r\n   * @param patch - Template patch\r\n   * @returns Array of state variable names, or empty array if not a template patch\r\n   */\r\n  static extractBindings(patch: Patch): string[] {\r\n    if (patch.type === 'UpdateTextTemplate' || patch.type === 'UpdatePropsTemplate') {\r\n      // Handle both string bindings and Binding objects\r\n      return patch.templatePatch.bindings.map(binding => {\r\n        if (typeof binding === 'object' && 'stateKey' in binding) {\r\n          return binding.stateKey;\r\n        }\r\n        return binding as string;\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Validate that all required bindings are present in state\r\n   *\r\n   * @param templatePatch - Template patch to validate\r\n   * @param stateValues - Available state values\r\n   * @returns True if all bindings are present\r\n   */\r\n  static validateBindings(\r\n    templatePatch: TemplatePatch,\r\n    stateValues: Record<string, any>\r\n  ): boolean {\r\n    return templatePatch.bindings.every(binding => {\r\n      const key = typeof binding === 'object' && 'stateKey' in binding\r\n        ? binding.stateKey\r\n        : binding as string;\r\n      return key in stateValues;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get missing bindings from state\r\n   *\r\n   * @param templatePatch - Template patch to check\r\n   * @param stateValues - Available state values\r\n   * @returns Array of missing binding names\r\n   */\r\n  static getMissingBindings(\r\n    templatePatch: TemplatePatch,\r\n    stateValues: Record<string, any>\r\n  ): string[] {\r\n    return templatePatch.bindings\r\n      .filter(binding => {\r\n        const key = typeof binding === 'object' && 'stateKey' in binding\r\n          ? binding.stateKey\r\n          : binding as string;\r\n        return !(key in stateValues);\r\n      })\r\n      .map(binding => {\r\n        if (typeof binding === 'object' && 'stateKey' in binding) {\r\n          return binding.stateKey;\r\n        }\r\n        return binding as string;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Render loop template with current array state\r\n   *\r\n   * @param loopTemplate - Loop template data\r\n   * @param stateValues - Current state values (must include array binding)\r\n   * @returns Array of rendered VNodes\r\n   *\r\n   * @example\r\n   * const template = {\r\n   *   array_binding: \"todos\",\r\n   *   item_template: {\r\n   *     type: \"Element\",\r\n   *     tag: \"li\",\r\n   *     children_templates: [{\r\n   *       type: \"Text\",\r\n   *       template_patch: { template: \"{0}\", bindings: [\"item.text\"], slots: [0] }\r\n   *     }]\r\n   *   }\r\n   * };\r\n   * renderLoopTemplate(template, { todos: [{ text: \"A\" }, { text: \"B\" }] })\r\n   * → [<li>A</li>, <li>B</li>]\r\n   */\r\n  static renderLoopTemplate(\r\n    loopTemplate: LoopTemplate,\r\n    stateValues: Record<string, any>\r\n  ): VNode[] {\r\n    const array = stateValues[loopTemplate.array_binding];\r\n\r\n    if (!Array.isArray(array)) {\r\n      console.warn(\r\n        `[TemplateRenderer] Expected array for '${loopTemplate.array_binding}', got:`,\r\n        array\r\n      );\r\n      return [];\r\n    }\r\n\r\n    return array.map((item, index) => {\r\n      // Build item state with nested object access\r\n      const itemState = {\r\n        ...stateValues,\r\n        item,\r\n        index,\r\n        ...(loopTemplate.index_var ? { [loopTemplate.index_var]: index } : {})\r\n      };\r\n\r\n      // Flatten item object for binding access (item.text → \"item.text\": value)\r\n      const flattenedState = this.flattenItemState(itemState, item);\r\n\r\n      // Render item template\r\n      return this.renderItemTemplate(loopTemplate.item_template, flattenedState);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Flatten item object for template binding access\r\n   *\r\n   * @param itemState - Current state including item\r\n   * @param item - The array item to flatten\r\n   * @returns Flattened state with \"item.property\" keys\r\n   *\r\n   * @example\r\n   * flattenItemState({ item: { id: 1, text: \"A\" } }, { id: 1, text: \"A\" })\r\n   * → { \"item.id\": 1, \"item.text\": \"A\", item: {...}, ... }\r\n   */\r\n  private static flattenItemState(\r\n    itemState: Record<string, any>,\r\n    item: any\r\n  ): Record<string, any> {\r\n    const flattened = { ...itemState };\r\n\r\n    if (typeof item === 'object' && item !== null && !Array.isArray(item)) {\r\n      // Flatten object properties with \"item.\" prefix\r\n      for (const key in item) {\r\n        flattened[`item.${key}`] = item[key];\r\n      }\r\n    }\r\n\r\n    return flattened;\r\n  }\r\n\r\n  /**\r\n   * Render item template to VNode\r\n   *\r\n   * @param itemTemplate - Template for individual list item\r\n   * @param stateValues - State values with flattened item properties\r\n   * @returns Rendered VNode\r\n   */\r\n  private static renderItemTemplate(\r\n    itemTemplate: ItemTemplate,\r\n    stateValues: Record<string, any>\r\n  ): VNode {\r\n    switch (itemTemplate.type) {\r\n      case 'Text': {\r\n        const content = this.renderTemplatePatch(itemTemplate.template_patch, stateValues);\r\n        return {\r\n          type: 'Text',\r\n          content\r\n        } as VText;\r\n      }\r\n\r\n      case 'Element': {\r\n        // Render props\r\n        const props: Record<string, string> = {};\r\n        if (itemTemplate.props_templates) {\r\n          for (const [propName, propTemplate] of Object.entries(itemTemplate.props_templates)) {\r\n            props[propName] = this.renderTemplatePatch(propTemplate, stateValues);\r\n          }\r\n        }\r\n\r\n        // Render children\r\n        const children = (itemTemplate.children_templates || []).map(childTemplate =>\r\n          this.renderItemTemplate(childTemplate, stateValues)\r\n        );\r\n\r\n        // Render key\r\n        const key = itemTemplate.key_binding\r\n          ? String(stateValues[itemTemplate.key_binding])\r\n          : undefined;\r\n\r\n        return {\r\n          type: 'Element',\r\n          tag: itemTemplate.tag,\r\n          props,\r\n          children,\r\n          key\r\n        } as VElement;\r\n      }\r\n\r\n      default:\r\n        throw new Error(`Unknown item template type: ${(itemTemplate as any).type}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert rendered loop VNodes to concrete patches\r\n   * Generates Create/Replace patches for list update\r\n   *\r\n   * @param parentPath - Path to parent element containing the list\r\n   * @param vnodes - Rendered VNodes for list items\r\n   * @returns Array of patches to update the list\r\n   */\r\n  private static convertLoopToPatches(\r\n    parentPath: number[],\r\n    vnodes: VNode[]\r\n  ): Patch[] {\r\n    // For Phase 4A simplicity: Replace entire list with Create patches\r\n    // TODO Phase 4C: Optimize with incremental diffing\r\n\r\n    return vnodes.map((node, index) => ({\r\n      type: 'Create',\r\n      path: [...parentPath, index],\r\n      node\r\n    } as Patch));\r\n  }\r\n}\r\n","import { Patch } from './types';\r\nimport { TemplateRenderer } from './template-renderer';\r\n\r\n/**\r\n * Queued hint with pre-computed patches\r\n */\r\ninterface QueuedHint {\r\n  hintId: string;\r\n  componentId: string;\r\n  patches: Patch[];\r\n  confidence: number;\r\n  predictedState: Record<string, any>;\r\n  queuedAt: number;\r\n  /** True if this hint contains template patches (for statistics) */\r\n  isTemplate?: boolean;\r\n}\r\n\r\n/**\r\n * Manages hint queue for usePredictHint\r\n * Stores pre-computed patches and applies them when state changes match\r\n */\r\nexport class HintQueue {\r\n  private hints: Map<string, QueuedHint> = new Map();\r\n  private debugLogging: boolean;\r\n  private maxHintAge: number = 5000; // 5 seconds TTL\r\n\r\n  constructor(options: { debugLogging?: boolean } = {}) {\r\n    this.debugLogging = options.debugLogging || false;\r\n  }\r\n\r\n  /**\r\n   * Queue a hint from the server\r\n   */\r\n  queueHint(data: {\r\n    componentId: string;\r\n    hintId: string;\r\n    patches: Patch[];\r\n    confidence: number;\r\n    predictedState: Record<string, any>;\r\n  }): void {\r\n    const key = `${data.componentId}:${data.hintId}`;\r\n\r\n    // Check if this hint contains template patches\r\n    const isTemplate = data.patches.some(patch => TemplateRenderer.isTemplatePatch(patch));\r\n\r\n    this.hints.set(key, {\r\n      ...data,\r\n      queuedAt: Date.now(),\r\n      isTemplate\r\n    });\r\n\r\n    const patchType = isTemplate ? '📐 TEMPLATE' : '📄 CONCRETE';\r\n    this.log(`${patchType} hint '${data.hintId}' queued for ${data.componentId}`, data);\r\n\r\n    // Auto-expire old hints\r\n    this.cleanupStaleHints();\r\n  }\r\n\r\n  /**\r\n   * Check if a state change matches any queued hint\r\n   * Returns patches if match found, null otherwise\r\n   */\r\n  matchHint(componentId: string, stateChanges: Record<string, any>): {\r\n    hintId: string;\r\n    patches: Patch[];\r\n    confidence: number;\r\n  } | null {\r\n    // Find hints for this component\r\n    const componentHints = Array.from(this.hints.entries())\r\n      .filter(([key]) => key.startsWith(`${componentId}:`))\r\n      .map(([, hint]) => hint);\r\n\r\n    // Check each hint to see if it matches the state change\r\n    for (const hint of componentHints) {\r\n      if (this.stateMatches(hint.predictedState, stateChanges)) {\r\n        const patchType = hint.isTemplate ? '📐 TEMPLATE' : '📄 CONCRETE';\r\n        this.log(`${patchType} hint '${hint.hintId}' matched!`, { hint, stateChanges });\r\n\r\n        // Remove from queue\r\n        const key = `${componentId}:${hint.hintId}`;\r\n        this.hints.delete(key);\r\n\r\n        // Materialize template patches with current state values\r\n        const materializedPatches = TemplateRenderer.materializePatches(\r\n          hint.patches,\r\n          stateChanges\r\n        );\r\n\r\n        return {\r\n          hintId: hint.hintId,\r\n          patches: materializedPatches,\r\n          confidence: hint.confidence\r\n        };\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Check if predicted state matches actual state change\r\n   */\r\n  private stateMatches(predicted: Record<string, any>, actual: Record<string, any>): boolean {\r\n    // Check if all predicted keys match actual values\r\n    for (const [key, predictedValue] of Object.entries(predicted)) {\r\n      if (!(key in actual)) {\r\n        return false; // Key not in actual change\r\n      }\r\n\r\n      // Deep equality check (simplified - could use lodash.isEqual in production)\r\n      if (JSON.stringify(actual[key]) !== JSON.stringify(predictedValue)) {\r\n        return false; // Value doesn't match\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Remove hints older than maxHintAge\r\n   */\r\n  private cleanupStaleHints(): void {\r\n    const now = Date.now();\r\n    const staleKeys: string[] = [];\r\n\r\n    for (const [key, hint] of this.hints.entries()) {\r\n      if (now - hint.queuedAt > this.maxHintAge) {\r\n        staleKeys.push(key);\r\n      }\r\n    }\r\n\r\n    if (staleKeys.length > 0) {\r\n      this.log(`Removing ${staleKeys.length} stale hint(s)`, staleKeys);\r\n      for (const key of staleKeys) {\r\n        this.hints.delete(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all hints for a component\r\n   */\r\n  clearComponent(componentId: string): void {\r\n    const keysToRemove = Array.from(this.hints.keys())\r\n      .filter(key => key.startsWith(`${componentId}:`));\r\n\r\n    for (const key of keysToRemove) {\r\n      this.hints.delete(key);\r\n    }\r\n\r\n    if (keysToRemove.length > 0) {\r\n      this.log(`Cleared ${keysToRemove.length} hint(s) for component ${componentId}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all hints\r\n   */\r\n  clearAll(): void {\r\n    this.hints.clear();\r\n    this.log('Cleared all hints');\r\n  }\r\n\r\n  /**\r\n   * Get stats about queued hints\r\n   */\r\n  getStats() {\r\n    const allHints = Array.from(this.hints.values());\r\n    const templateHints = allHints.filter(h => h.isTemplate);\r\n    const concreteHints = allHints.filter(h => !h.isTemplate);\r\n\r\n    return {\r\n      totalHints: this.hints.size,\r\n      templateHints: templateHints.length,\r\n      concreteHints: concreteHints.length,\r\n      templatePercentage: this.hints.size > 0\r\n        ? Math.round((templateHints.length / this.hints.size) * 100)\r\n        : 0,\r\n      hintsByComponent: allHints.reduce((acc, hint) => {\r\n        acc[hint.componentId] = (acc[hint.componentId] || 0) + 1;\r\n        return acc;\r\n      }, {} as Record<string, number>)\r\n    };\r\n  }\r\n\r\n  private log(message: string, ...args: any[]): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact HintQueue] ${message}`, ...args);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Bridge for communicating prediction events to playground parent window\r\n * Emits postMessage events that the React playground can listen to\r\n */\r\nexport class PlaygroundBridge {\r\n  private debugLogging: boolean;\r\n\r\n  constructor(options: { debugLogging?: boolean } = {}) {\r\n    this.debugLogging = options.debugLogging || false;\r\n  }\r\n\r\n  /**\r\n   * Notify that a prediction was received from server\r\n   */\r\n  predictionReceived(data: {\r\n    componentId: string;\r\n    hintId: string;\r\n    patchCount: number;\r\n    confidence: number;\r\n  }): void {\r\n    this.postMessage({\r\n      type: 'minimact:prediction-received',\r\n      data\r\n    });\r\n\r\n    this.log('Prediction received', data);\r\n  }\r\n\r\n  /**\r\n   * Notify that a cache hit occurred (instant patch application)\r\n   */\r\n  cacheHit(data: {\r\n    componentId: string;\r\n    hintId: string;\r\n    latency: number;\r\n    confidence: number;\r\n    patchCount: number;\r\n  }): void {\r\n    this.postMessage({\r\n      type: 'minimact:cache-hit',\r\n      data: {\r\n        ...data,\r\n        cacheHit: true,\r\n        elapsedMs: data.latency\r\n      }\r\n    });\r\n\r\n    this.log('🟢 CACHE HIT', data);\r\n  }\r\n\r\n  /**\r\n   * Notify that a cache miss occurred (had to compute on server)\r\n   */\r\n  cacheMiss(data: {\r\n    componentId: string;\r\n    methodName: string;\r\n    latency: number;\r\n    patchCount: number;\r\n  }): void {\r\n    this.postMessage({\r\n      type: 'minimact:cache-miss',\r\n      data: {\r\n        ...data,\r\n        cacheHit: false,\r\n        elapsedMs: data.latency,\r\n        predictionConfidence: 0\r\n      }\r\n    });\r\n\r\n    this.log('🔴 CACHE MISS', data);\r\n  }\r\n\r\n  /**\r\n   * Notify that a correction was applied (prediction was wrong)\r\n   */\r\n  correctionApplied(data: {\r\n    componentId: string;\r\n    patchCount: number;\r\n  }): void {\r\n    this.postMessage({\r\n      type: 'minimact:correction',\r\n      data\r\n    });\r\n\r\n    this.log('Correction applied (prediction was incorrect)', data);\r\n  }\r\n\r\n  /**\r\n   * Post message to parent window (for iframe communication)\r\n   */\r\n  private postMessage(message: any): void {\r\n    // Check if we're in an iframe\r\n    if (window.parent && window.parent !== window) {\r\n      window.parent.postMessage(message, '*');\r\n    }\r\n\r\n    // Also dispatch as custom event for same-window listeners\r\n    window.dispatchEvent(new CustomEvent(message.type, { detail: message.data }));\r\n  }\r\n\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact PlaygroundBridge] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Client-Computed State Manager\r\n *\r\n * Manages variables that are computed on the client using external libraries\r\n * (lodash, moment, etc.) and syncs them to the server for SSR.\r\n *\r\n * This enables Option 1 auto-detection: developers use external libraries\r\n * naturally, and the system automatically handles client-server sync.\r\n */\r\n\r\n/**\r\n * A function that computes a value based on component state\r\n */\r\nexport type ComputeFunction = () => any;\r\n\r\n/**\r\n * Registry entry for a single client-computed variable\r\n */\r\ninterface ClientComputedVariable {\r\n  varName: string;\r\n  computeFn: ComputeFunction;\r\n  lastValue?: any;\r\n  dependencies?: string[]; // State keys this variable depends on\r\n}\r\n\r\n/**\r\n * Registry of client-computed variables per component\r\n */\r\ninterface ClientComputedRegistry {\r\n  [componentId: string]: {\r\n    [varName: string]: ClientComputedVariable;\r\n  };\r\n}\r\n\r\nconst computedRegistry: ClientComputedRegistry = {};\r\n\r\n/**\r\n * Debug logging\r\n */\r\nlet debugLogging = false;\r\n\r\nexport function setDebugLogging(enabled: boolean): void {\r\n  debugLogging = enabled;\r\n}\r\n\r\nfunction log(message: string, data?: any): void {\r\n  if (debugLogging) {\r\n    console.log(`[ClientComputed] ${message}`, data || '');\r\n  }\r\n}\r\n\r\n/**\r\n * Register a client-computed variable for a component\r\n *\r\n * @param componentId - Unique identifier for the component\r\n * @param varName - Name of the variable being computed\r\n * @param computeFn - Function that computes the value\r\n * @param dependencies - Optional list of state keys this variable depends on\r\n */\r\nexport function registerClientComputed(\r\n  componentId: string,\r\n  varName: string,\r\n  computeFn: ComputeFunction,\r\n  dependencies?: string[]\r\n): void {\r\n  if (!computedRegistry[componentId]) {\r\n    computedRegistry[componentId] = {};\r\n  }\r\n\r\n  computedRegistry[componentId][varName] = {\r\n    varName,\r\n    computeFn,\r\n    dependencies\r\n  };\r\n\r\n  log(`Registered client-computed variable`, { componentId, varName, dependencies });\r\n}\r\n\r\n/**\r\n * Compute a single variable's value\r\n *\r\n * @param componentId - Component identifier\r\n * @param varName - Variable name\r\n * @returns The computed value or undefined if not found\r\n */\r\nexport function computeVariable(componentId: string, varName: string): any {\r\n  const computed = computedRegistry[componentId]?.[varName];\r\n\r\n  if (!computed) {\r\n    console.warn(`[ClientComputed] Variable '${varName}' not registered for component '${componentId}'`);\r\n    return undefined;\r\n  }\r\n\r\n  try {\r\n    const value = computed.computeFn();\r\n    computed.lastValue = value;\r\n    log(`Computed variable`, { componentId, varName, value });\r\n    return value;\r\n  } catch (error) {\r\n    console.error(`[ClientComputed] Error computing '${varName}':`, error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Compute all client-computed variables for a component\r\n *\r\n * @param componentId - Component identifier\r\n * @returns Object with all computed values\r\n */\r\nexport function computeAllForComponent(componentId: string): Record<string, any> {\r\n  const computed = computedRegistry[componentId];\r\n\r\n  if (!computed) {\r\n    log(`No computed variables for component`, { componentId });\r\n    return {};\r\n  }\r\n\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [varName, variable] of Object.entries(computed)) {\r\n    try {\r\n      const value = variable.computeFn();\r\n      variable.lastValue = value;\r\n      result[varName] = value;\r\n    } catch (error) {\r\n      console.error(`[ClientComputed] Error computing '${varName}':`, error);\r\n      result[varName] = undefined;\r\n    }\r\n  }\r\n\r\n  log(`Computed all variables`, { componentId, result });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Compute only variables that depend on a specific state key\r\n *\r\n * @param componentId - Component identifier\r\n * @param changedStateKey - State key that changed\r\n * @returns Object with affected computed values\r\n */\r\nexport function computeDependentVariables(\r\n  componentId: string,\r\n  changedStateKey: string\r\n): Record<string, any> {\r\n  const computed = computedRegistry[componentId];\r\n\r\n  if (!computed) {\r\n    return {};\r\n  }\r\n\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [varName, variable] of Object.entries(computed)) {\r\n    // If no dependencies specified, assume it depends on everything\r\n    const shouldRecompute = !variable.dependencies ||\r\n                           variable.dependencies.includes(changedStateKey);\r\n\r\n    if (shouldRecompute) {\r\n      try {\r\n        const value = variable.computeFn();\r\n        variable.lastValue = value;\r\n        result[varName] = value;\r\n        log(`Recomputed dependent variable`, { componentId, varName, changedStateKey, value });\r\n      } catch (error) {\r\n        console.error(`[ClientComputed] Error recomputing '${varName}':`, error);\r\n        result[varName] = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Get the last computed value without recomputing\r\n *\r\n * @param componentId - Component identifier\r\n * @param varName - Variable name\r\n * @returns The last computed value or undefined\r\n */\r\nexport function getLastValue(componentId: string, varName: string): any {\r\n  return computedRegistry[componentId]?.[varName]?.lastValue;\r\n}\r\n\r\n/**\r\n * Get all last computed values without recomputing\r\n *\r\n * @param componentId - Component identifier\r\n * @returns Object with all last computed values\r\n */\r\nexport function getAllLastValues(componentId: string): Record<string, any> {\r\n  const computed = computedRegistry[componentId];\r\n\r\n  if (!computed) {\r\n    return {};\r\n  }\r\n\r\n  const result: Record<string, any> = {};\r\n\r\n  for (const [varName, variable] of Object.entries(computed)) {\r\n    result[varName] = variable.lastValue;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Check if a component has any client-computed variables\r\n *\r\n * @param componentId - Component identifier\r\n * @returns True if component has computed variables\r\n */\r\nexport function hasClientComputed(componentId: string): boolean {\r\n  return !!computedRegistry[componentId] &&\r\n         Object.keys(computedRegistry[componentId]).length > 0;\r\n}\r\n\r\n/**\r\n * Get list of all computed variable names for a component\r\n *\r\n * @param componentId - Component identifier\r\n * @returns Array of variable names\r\n */\r\nexport function getComputedVariableNames(componentId: string): string[] {\r\n  const computed = computedRegistry[componentId];\r\n  return computed ? Object.keys(computed) : [];\r\n}\r\n\r\n/**\r\n * Clear all computed variables for a component\r\n * Used when component is unmounted\r\n *\r\n * @param componentId - Component identifier\r\n */\r\nexport function clearComponent(componentId: string): void {\r\n  delete computedRegistry[componentId];\r\n  log(`Cleared component`, { componentId });\r\n}\r\n\r\n/**\r\n * Clear all computed variables (for testing/cleanup)\r\n */\r\nexport function clearAll(): void {\r\n  Object.keys(computedRegistry).forEach(key => delete computedRegistry[key]);\r\n  log('Cleared all computed variables');\r\n}\r\n\r\n/**\r\n * Get debug info about registered computations\r\n * Useful for dev tools / debugging\r\n */\r\nexport function getDebugInfo(): {\r\n  componentCount: number;\r\n  components: Record<string, { variableCount: number; variables: string[] }>;\r\n} {\r\n  const components: Record<string, { variableCount: number; variables: string[] }> = {};\r\n\r\n  for (const [componentId, computed] of Object.entries(computedRegistry)) {\r\n    const variables = Object.keys(computed);\r\n    components[componentId] = {\r\n      variableCount: variables.length,\r\n      variables\r\n    };\r\n  }\r\n\r\n  return {\r\n    componentCount: Object.keys(computedRegistry).length,\r\n    components\r\n  };\r\n}\r\n","/**\r\n * Template State Manager - Client-Side Template Rendering\r\n *\r\n * Manages \"virtual state\" for text nodes using parameterized templates.\r\n * This enables instant hot reload with 100% coverage and minimal memory.\r\n *\r\n * Architecture:\r\n * - Templates loaded from .templates.json at component init\r\n * - State changes trigger template re-rendering\r\n * - Hot reload updates templates without server round-trip\r\n *\r\n * Memory: ~2KB per component (vs 100KB with prediction-based approach)\r\n * Coverage: 100% (works with any value)\r\n * Latency: <5ms for template updates\r\n */\r\n\r\nexport interface Template {\r\n  /** Template string with {0}, {1}, etc. placeholders */\r\n  template: string;\r\n  /** State bindings that fill the template slots */\r\n  bindings: string[];\r\n  /** Character positions where params are inserted */\r\n  slots: number[];\r\n  /** DOM path to the text node */\r\n  path: number[];\r\n  /** Template type: static | dynamic | attribute */\r\n  type: 'static' | 'dynamic' | 'attribute';\r\n  /** Attribute name (only for attribute templates) */\r\n  attribute?: string;\r\n}\r\n\r\nexport interface TemplateMap {\r\n  component: string;\r\n  version: string;\r\n  generatedAt: number;\r\n  templates: Record<string, Template>;\r\n}\r\n\r\nexport interface TemplatePatch {\r\n  type: 'UpdateTextTemplate' | 'UpdatePropTemplate';\r\n  componentId: string;\r\n  path: number[];\r\n  template: string;\r\n  params: any[];\r\n  bindings: string[];\r\n  slots: number[];\r\n  attribute?: string;\r\n}\r\n\r\n/**\r\n * Template State Manager\r\n */\r\nexport class TemplateStateManager {\r\n  private templates: Map<string, Template> = new Map();\r\n  private componentStates: Map<string, Map<string, any>> = new Map();\r\n\r\n  /**\r\n   * Initialize templates from .templates.json file\r\n   */\r\n  loadTemplateMap(componentId: string, templateMap: TemplateMap): void {\r\n    console.log(`[TemplateState] Loading ${Object.keys(templateMap.templates).length} templates for ${componentId}`);\r\n\r\n    for (const [nodePath, template] of Object.entries(templateMap.templates)) {\r\n      const key = `${componentId}:${nodePath}`;\r\n      this.templates.set(key, template);\r\n    }\r\n\r\n    // Initialize component state tracking\r\n    if (!this.componentStates.has(componentId)) {\r\n      this.componentStates.set(componentId, new Map());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register a template for a specific node path\r\n   */\r\n  registerTemplate(\r\n    componentId: string,\r\n    nodePath: string,\r\n    template: Template\r\n  ): void {\r\n    const key = `${componentId}:${nodePath}`;\r\n    this.templates.set(key, template);\r\n  }\r\n\r\n  /**\r\n   * Get template by component ID and node path\r\n   */\r\n  getTemplate(componentId: string, nodePath: string): Template | undefined {\r\n    const key = `${componentId}:${nodePath}`;\r\n    return this.templates.get(key);\r\n  }\r\n\r\n  /**\r\n   * Get all templates for a component\r\n   */\r\n  getComponentTemplates(componentId: string): Map<string, Template> {\r\n    const result = new Map<string, Template>();\r\n\r\n    for (const [key, template] of this.templates.entries()) {\r\n      if (key.startsWith(`${componentId}:`)) {\r\n        const nodePath = key.substring(componentId.length + 1);\r\n        result.set(nodePath, template);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get templates bound to a specific state variable\r\n   */\r\n  getTemplatesBoundTo(componentId: string, stateKey: string): Template[] {\r\n    const templates: Template[] = [];\r\n\r\n    for (const [key, template] of this.templates.entries()) {\r\n      if (key.startsWith(`${componentId}:`) && template.bindings.includes(stateKey)) {\r\n        templates.push(template);\r\n      }\r\n    }\r\n\r\n    return templates;\r\n  }\r\n\r\n  /**\r\n   * Update component state (from useState)\r\n   */\r\n  updateState(componentId: string, stateKey: string, value: any): void {\r\n    let state = this.componentStates.get(componentId);\r\n    if (!state) {\r\n      state = new Map();\r\n      this.componentStates.set(componentId, state);\r\n    }\r\n    state.set(stateKey, value);\r\n  }\r\n\r\n  /**\r\n   * Get component state value\r\n   */\r\n  getStateValue(componentId: string, stateKey: string): any {\r\n    return this.componentStates.get(componentId)?.get(stateKey);\r\n  }\r\n\r\n  /**\r\n   * Render template with current state values\r\n   */\r\n  render(componentId: string, nodePath: string): string | null {\r\n    const template = this.getTemplate(componentId, nodePath);\r\n    if (!template) return null;\r\n\r\n    // Get state values for bindings\r\n    const params = template.bindings.map(binding =>\r\n      this.getStateValue(componentId, binding)\r\n    );\r\n\r\n    return this.renderWithParams(template.template, params);\r\n  }\r\n\r\n  /**\r\n   * Render template with specific parameter values\r\n   */\r\n  renderWithParams(template: string, params: any[]): string {\r\n    let result = template;\r\n\r\n    // Replace {0}, {1}, etc. with parameter values\r\n    params.forEach((param, index) => {\r\n      const placeholder = `{${index}}`;\r\n      const value = param !== undefined && param !== null ? String(param) : '';\r\n      result = result.replace(placeholder, value);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Apply template patch from hot reload\r\n   */\r\n  applyTemplatePatch(patch: TemplatePatch): { text: string; path: number[] } | null {\r\n    const { componentId, path, template, params, bindings, slots, attribute } = patch;\r\n\r\n    // Render template with params\r\n    const text = this.renderWithParams(template, params);\r\n\r\n    // Build node path key\r\n    const nodePath = this.buildNodePathKey(path);\r\n    const key = `${componentId}:${nodePath}`;\r\n\r\n    // Update stored template\r\n    const existingTemplate = this.templates.get(key);\r\n    if (existingTemplate) {\r\n      existingTemplate.template = template;\r\n      existingTemplate.bindings = bindings;\r\n      existingTemplate.slots = slots;\r\n      if (attribute) {\r\n        existingTemplate.attribute = attribute;\r\n      }\r\n    } else {\r\n      // Register new template\r\n      this.templates.set(key, {\r\n        template,\r\n        bindings,\r\n        slots,\r\n        path,\r\n        type: attribute ? 'attribute' : 'dynamic',\r\n        attribute\r\n      });\r\n    }\r\n\r\n    console.log(`[TemplateState] Applied template patch: \"${template}\" → \"${text}\"`);\r\n\r\n    return { text, path };\r\n  }\r\n\r\n  /**\r\n   * Build node path key from path array\r\n   * Example: [0, 1, 0] → \"0_1_0\"\r\n   */\r\n  private buildNodePathKey(path: number[]): string {\r\n    return path.join('_');\r\n  }\r\n\r\n  /**\r\n   * Clear all templates for a component\r\n   */\r\n  clearComponent(componentId: string): void {\r\n    const keysToDelete: string[] = [];\r\n\r\n    for (const key of this.templates.keys()) {\r\n      if (key.startsWith(`${componentId}:`)) {\r\n        keysToDelete.push(key);\r\n      }\r\n    }\r\n\r\n    for (const key of keysToDelete) {\r\n      this.templates.delete(key);\r\n    }\r\n\r\n    this.componentStates.delete(componentId);\r\n  }\r\n\r\n  /**\r\n   * Clear all templates\r\n   */\r\n  clear(): void {\r\n    this.templates.clear();\r\n    this.componentStates.clear();\r\n  }\r\n\r\n  /**\r\n   * Get statistics\r\n   */\r\n  getStats() {\r\n    const componentCount = this.componentStates.size;\r\n    const templateCount = this.templates.size;\r\n\r\n    // Estimate memory usage (rough estimate)\r\n    let memoryBytes = 0;\r\n    for (const template of this.templates.values()) {\r\n      memoryBytes += template.template.length * 2; // UTF-16\r\n      memoryBytes += template.bindings.length * 20; // Rough estimate\r\n      memoryBytes += template.slots.length * 4; // 4 bytes per number\r\n      memoryBytes += template.path.length * 4;\r\n    }\r\n\r\n    return {\r\n      componentCount,\r\n      templateCount,\r\n      memoryKB: Math.round(memoryBytes / 1024),\r\n      avgTemplatesPerComponent: templateCount / Math.max(componentCount, 1)\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Global template state manager instance\r\n */\r\nexport const templateState = new TemplateStateManager();\r\n","/**\r\n * Server Task - Client-side representation of a long-running server task\r\n *\r\n * Provides reactive state management for async operations that execute on the server.\r\n * Automatically syncs state changes from server and triggers component re-renders.\r\n */\r\n\r\nexport type ServerTaskStatus = 'idle' | 'running' | 'complete' | 'error' | 'cancelled';\r\n\r\n/**\r\n * Options for configuring a server task\r\n */\r\nexport interface ServerTaskOptions {\r\n  /** Enable streaming mode (for async generators) */\r\n  stream?: boolean;\r\n  /** Estimated number of chunks (for progress calculation in streaming mode) */\r\n  estimatedChunks?: number;\r\n  /** Callback invoked for each chunk in streaming mode */\r\n  onChunk?: (chunk: any, index: number) => void;\r\n  /** Maximum number of chunks to keep in memory (for memory management) */\r\n  maxChunksInMemory?: number;\r\n}\r\n\r\n/**\r\n * Server task interface - Represents a long-running operation on the server\r\n */\r\nexport interface ServerTask<T> {\r\n  // Status\r\n  status: ServerTaskStatus;\r\n  progress: number; // 0.0 to 1.0\r\n\r\n  // Result\r\n  result?: T;\r\n  error?: Error;\r\n\r\n  // Streaming-specific\r\n  streaming: boolean;\r\n  partial?: T; // Latest partial result (accumulated)\r\n  chunks: T[]; // All chunks received so far\r\n  chunkCount: number; // Number of chunks received\r\n\r\n  // Control methods\r\n  start(...args: any[]): void;\r\n  retry(...args: any[]): void;\r\n  cancel(): void;\r\n\r\n  // Promise interface (for await)\r\n  promise: Promise<T>;\r\n\r\n  // Metadata\r\n  startedAt?: Date;\r\n  completedAt?: Date;\r\n  duration?: number; // milliseconds\r\n\r\n  // Computed properties\r\n  readonly idle: boolean;\r\n  readonly running: boolean;\r\n  readonly complete: boolean;\r\n  readonly failed: boolean;\r\n  readonly cancelled: boolean;\r\n}\r\n\r\n/**\r\n * Server task implementation\r\n */\r\nexport class ServerTaskImpl<T> implements ServerTask<T> {\r\n  status: ServerTaskStatus = 'idle';\r\n  progress: number = 0;\r\n  result?: T;\r\n  error?: Error;\r\n  startedAt?: Date;\r\n  completedAt?: Date;\r\n  duration?: number;\r\n\r\n  // Streaming props\r\n  streaming: boolean;\r\n  partial?: T;\r\n  chunks: T[] = [];\r\n  chunkCount: number = 0;\r\n\r\n  private _promise?: Promise<T>;\r\n  private _resolve?: (value: T) => void;\r\n  private _reject?: (error: Error) => void;\r\n  private _options: ServerTaskOptions;\r\n\r\n  constructor(\r\n    private taskId: string,\r\n    private componentId: string,\r\n    private signalR: any,\r\n    private context: any,\r\n    options: ServerTaskOptions = {}\r\n  ) {\r\n    this._options = options;\r\n    this.streaming = options.stream || false;\r\n    this._createPromise();\r\n  }\r\n\r\n  private _createPromise(): void {\r\n    this._promise = new Promise<T>((resolve, reject) => {\r\n      this._resolve = resolve;\r\n      this._reject = reject;\r\n    });\r\n  }\r\n\r\n  get promise(): Promise<T> {\r\n    return this._promise!;\r\n  }\r\n\r\n  get idle(): boolean {\r\n    return this.status === 'idle';\r\n  }\r\n\r\n  get running(): boolean {\r\n    return this.status === 'running';\r\n  }\r\n\r\n  get complete(): boolean {\r\n    return this.status === 'complete';\r\n  }\r\n\r\n  get failed(): boolean {\r\n    return this.status === 'error';\r\n  }\r\n\r\n  get cancelled(): boolean {\r\n    return this.status === 'cancelled';\r\n  }\r\n\r\n  /**\r\n   * Start the server task with optional arguments\r\n   */\r\n  start(...args: any[]): void {\r\n    this.status = 'running';\r\n    this.startedAt = new Date();\r\n    this.completedAt = undefined;\r\n    this.progress = 0;\r\n    this.error = undefined;\r\n\r\n    // Clear previous results\r\n    if (this.streaming) {\r\n      this.chunks = [];\r\n      this.chunkCount = 0;\r\n      this.partial = undefined;\r\n    } else {\r\n      this.result = undefined;\r\n    }\r\n\r\n    // Trigger re-render to show \"running\" state immediately\r\n    this._triggerRerender();\r\n\r\n    // Invoke server task via SignalR\r\n    this.signalR.invoke('StartServerTask', this.componentId, this.taskId, args || [])\r\n      .catch((err: Error) => {\r\n        console.error(`[Minimact] Failed to start task ${this.taskId}:`, err);\r\n        this.status = 'error';\r\n        this.error = err;\r\n        this.completedAt = new Date();\r\n        this.duration = this.completedAt.getTime() - (this.startedAt?.getTime() || 0);\r\n        this._reject?.(err);\r\n        this._triggerRerender();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Retry a failed or cancelled task\r\n   */\r\n  retry(...args: any[]): void {\r\n    if (this.status !== 'error' && this.status !== 'cancelled') {\r\n      console.warn('[Minimact] Can only retry failed or cancelled tasks');\r\n      return;\r\n    }\r\n\r\n    // Reset promise for new attempt\r\n    this._createPromise();\r\n\r\n    this.status = 'running';\r\n    this.startedAt = new Date();\r\n    this.completedAt = undefined;\r\n    this.progress = 0;\r\n    this.error = undefined;\r\n\r\n    if (this.streaming) {\r\n      this.chunks = [];\r\n      this.chunkCount = 0;\r\n      this.partial = undefined;\r\n    } else {\r\n      this.result = undefined;\r\n    }\r\n\r\n    this._triggerRerender();\r\n\r\n    this.signalR.invoke('RetryServerTask', this.componentId, this.taskId, args || [])\r\n      .catch((err: Error) => {\r\n        console.error(`[Minimact] Failed to retry task ${this.taskId}:`, err);\r\n        this.status = 'error';\r\n        this.error = err;\r\n        this.completedAt = new Date();\r\n        this.duration = this.completedAt.getTime() - (this.startedAt?.getTime() || 0);\r\n        this._reject?.(err);\r\n        this._triggerRerender();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Cancel a running task\r\n   */\r\n  cancel(): void {\r\n    if (this.status !== 'running') {\r\n      console.warn('[Minimact] Can only cancel running tasks');\r\n      return;\r\n    }\r\n\r\n    this.signalR.invoke('CancelServerTask', this.componentId, this.taskId)\r\n      .then(() => {\r\n        this.status = 'cancelled';\r\n        this.completedAt = new Date();\r\n        this.duration = this.completedAt.getTime() - (this.startedAt?.getTime() || 0);\r\n        this._reject?.(new Error('Task cancelled by user'));\r\n        this._triggerRerender();\r\n      })\r\n      .catch((err: Error) => {\r\n        console.error(`[Minimact] Failed to cancel task ${this.taskId}:`, err);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Update task state from server\r\n   * Called by Minimact when server sends task state updates via SignalR\r\n   */\r\n  _updateFromServer(state: any): void {\r\n    const previousStatus = this.status;\r\n\r\n    this.status = state.status;\r\n    this.progress = state.progress || 0;\r\n    this.result = state.result;\r\n\r\n    if (state.error) {\r\n      this.error = new Error(state.error);\r\n    }\r\n\r\n    if (state.startedAt) {\r\n      this.startedAt = new Date(state.startedAt);\r\n    }\r\n\r\n    if (state.completedAt) {\r\n      this.completedAt = new Date(state.completedAt);\r\n    }\r\n\r\n    if (state.duration) {\r\n      this.duration = state.duration;\r\n    }\r\n\r\n    // Resolve/reject promise based on status change\r\n    if (this.status === 'complete' && previousStatus !== 'complete') {\r\n      if (this._resolve) {\r\n        this._resolve(this.result!);\r\n      }\r\n    } else if (this.status === 'error' && previousStatus !== 'error') {\r\n      if (this._reject) {\r\n        this._reject(this.error!);\r\n      }\r\n    } else if (this.status === 'cancelled' && previousStatus !== 'cancelled') {\r\n      if (this._reject) {\r\n        this._reject(new Error('Task cancelled'));\r\n      }\r\n    }\r\n\r\n    // Trigger re-render when state changes\r\n    if (previousStatus !== this.status || this.progress !== state.progress) {\r\n      this._triggerRerender();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger component re-render\r\n   * Uses hint queue to check for predicted patches\r\n   */\r\n  private _triggerRerender(): void {\r\n    if (!this.context || !this.context.hintQueue) {\r\n      return;\r\n    }\r\n\r\n    const stateChanges: Record<string, any> = {\r\n      [this.taskId]: {\r\n        status: this.status,\r\n        progress: this.progress,\r\n        chunkCount: this.chunkCount\r\n      }\r\n    };\r\n\r\n    const hint = this.context.hintQueue.matchHint(this.context.componentId, stateChanges);\r\n\r\n    if (hint) {\r\n      // Cache hit! Apply predicted patches\r\n      console.log(`[Minimact] 🟢 Task state change predicted! Applying ${hint.patches.length} patches`);\r\n      this.context.domPatcher.applyPatches(this.context.element, hint.patches);\r\n    } else {\r\n      // Cache miss - server will send patches\r\n      console.log(`[Minimact] 🔴 Task state change not predicted`);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * useComputed Hook\r\n *\r\n * Compute values on the client using browser-only APIs or external libraries,\r\n * then sync to the server for rendering.\r\n *\r\n * This replaces the conceptually flawed \"useClientState\" with a sound approach:\r\n * - Client computes values using browser APIs (lodash, moment, geolocation, crypto)\r\n * - Results are synced to server via UpdateClientComputedState\r\n * - Server accesses values via GetClientState<T>(key) for rendering\r\n * - Server still does ALL rendering (dehydrationist architecture)\r\n */\r\n\r\nimport { useState, useEffect, useRef } from './hooks';\r\nimport type { ComponentContext } from './hooks';\r\n\r\nexport interface UseComputedOptions<T = any> {\r\n  /** Enable memoization (default: true) */\r\n  memoize?: boolean;\r\n  /** Cache expiry in milliseconds (e.g., 5000 = 5 seconds) */\r\n  expiry?: number;\r\n  /** Debounce sync to server (milliseconds) */\r\n  debounce?: number;\r\n  /** Throttle sync to server (milliseconds) */\r\n  throttle?: number;\r\n  /** Initial value before first computation */\r\n  initialValue?: T;\r\n}\r\n\r\ninterface ComputedCache<T> {\r\n  value: T;\r\n  timestamp: number;\r\n  deps: any[];\r\n}\r\n\r\nlet currentContext: ComponentContext | null = null;\r\nlet computedIndex = 0;\r\n\r\n/**\r\n * Set the current component context for useComputed\r\n * Called by setComponentContext in hooks.ts\r\n */\r\nexport function setComputedContext(context: ComponentContext): void {\r\n  currentContext = context;\r\n  computedIndex = 0;\r\n}\r\n\r\n/**\r\n * Clear the current component context\r\n */\r\nexport function clearComputedContext(): void {\r\n  currentContext = null;\r\n  computedIndex = 0;\r\n}\r\n\r\n/**\r\n * useComputed Hook\r\n *\r\n * @param key - Unique identifier for server-side access via GetClientState<T>(key)\r\n * @param computeFn - Function that computes the value (runs on client)\r\n * @param deps - Dependency array (like useEffect)\r\n * @param options - Configuration options\r\n * @returns The computed value\r\n *\r\n * @example\r\n * // With lodash\r\n * const sortedUsers = useComputed('sortedUsers', () => {\r\n *   return _.sortBy(users, 'name');\r\n * }, [users]);\r\n *\r\n * @example\r\n * // With geolocation\r\n * const location = useComputed('location', async () => {\r\n *   const pos = await new Promise((resolve) => {\r\n *     navigator.geolocation.getCurrentPosition(resolve);\r\n *   });\r\n *   return { lat: pos.coords.latitude, lng: pos.coords.longitude };\r\n * }, []);\r\n *\r\n * @example\r\n * // With memoization and expiry\r\n * const result = useComputed('result', () => compute(data), [data], {\r\n *   memoize: true,\r\n *   expiry: 5000  // Cache for 5 seconds\r\n * });\r\n */\r\nexport function useComputed<T>(\r\n  key: string,\r\n  computeFn: () => T,\r\n  deps: any[] = [],\r\n  options: UseComputedOptions<T> = {}\r\n): T {\r\n  if (!currentContext) {\r\n    throw new Error('[Minimact] useComputed must be called within a component render');\r\n  }\r\n\r\n  const {\r\n    memoize = true,  // Default to true for performance\r\n    expiry,\r\n    debounce,\r\n    throttle,\r\n    initialValue\r\n  } = options;\r\n\r\n  const context = currentContext;\r\n  const index = computedIndex++;\r\n  const computedKey = `computed_${index}_${key}`;\r\n\r\n  // Store computed value in state\r\n  const [value, setValue] = useState<T>(\r\n    initialValue !== undefined ? initialValue : null as T\r\n  );\r\n\r\n  // Cache for memoization\r\n  const cache = useRef<ComputedCache<T> | null>(null);\r\n\r\n  // Debounce timer ref\r\n  const debounceTimer = useRef<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Check if we should use cached value\r\n    if (memoize && cache.current) {\r\n      // Check if deps changed\r\n      const depsChanged = deps.length !== cache.current.deps.length ||\r\n        deps.some((dep, i) => !Object.is(dep, cache.current!.deps[i]));\r\n\r\n      if (!depsChanged) {\r\n        // Deps haven't changed\r\n        if (expiry) {\r\n          // Check if cache expired\r\n          const age = Date.now() - cache.current.timestamp;\r\n          if (age < expiry) {\r\n            // Cache is still valid, use cached value\r\n            return;\r\n          }\r\n          // Cache expired, continue to recompute\r\n        } else {\r\n          // No expiry, use cached value indefinitely\r\n          return;\r\n        }\r\n      }\r\n      // Deps changed, continue to recompute\r\n    }\r\n\r\n    // Compute new value\r\n    let computed: T;\r\n    try {\r\n      computed = computeFn();\r\n    } catch (error) {\r\n      console.error(`[Minimact] Error in useComputed('${key}'):`, error);\r\n      throw error;\r\n    }\r\n\r\n    // Handle async computations\r\n    if (computed instanceof Promise) {\r\n      computed.then((resolvedValue) => {\r\n        // Update cache if memoization enabled\r\n        if (memoize) {\r\n          cache.current = {\r\n            value: resolvedValue,\r\n            timestamp: Date.now(),\r\n            deps: [...deps]\r\n          };\r\n        }\r\n\r\n        // Update local state\r\n        setValue(resolvedValue);\r\n\r\n        // Sync to server\r\n        syncToServer(resolvedValue);\r\n      }).catch((error) => {\r\n        console.error(`[Minimact] Async error in useComputed('${key}'):`, error);\r\n      });\r\n\r\n      return; // Don't sync yet, wait for promise to resolve\r\n    }\r\n\r\n    // Update cache if memoization enabled\r\n    if (memoize) {\r\n      cache.current = {\r\n        value: computed,\r\n        timestamp: Date.now(),\r\n        deps: [...deps]\r\n      };\r\n    }\r\n\r\n    // Update local state\r\n    setValue(computed);\r\n\r\n    // Sync to server\r\n    syncToServer(computed);\r\n\r\n  }, deps);\r\n\r\n  /**\r\n   * Sync computed value to server via SignalR\r\n   */\r\n  function syncToServer(computedValue: T): void {\r\n    const doSync = () => {\r\n      if (!context.signalR) {\r\n        console.warn(`[Minimact] SignalR not available, cannot sync useComputed('${key}')`);\r\n        return;\r\n      }\r\n\r\n      context.signalR.updateClientComputedState(context.componentId, { [key]: computedValue })\r\n        .catch(err => {\r\n          console.error(`[Minimact] Failed to sync computed state '${key}':`, err);\r\n        });\r\n    };\r\n\r\n    // Apply debounce if specified\r\n    if (debounce) {\r\n      if (debounceTimer.current !== null) {\r\n        clearTimeout(debounceTimer.current);\r\n      }\r\n      debounceTimer.current = window.setTimeout(() => {\r\n        doSync();\r\n        debounceTimer.current = null;\r\n      }, debounce);\r\n      return;\r\n    }\r\n\r\n    // TODO: Implement throttle\r\n    if (throttle) {\r\n      // For now, just sync immediately\r\n      // Proper throttle implementation would track last sync time\r\n      doSync();\r\n      return;\r\n    }\r\n\r\n    // No debounce/throttle, sync immediately\r\n    doSync();\r\n  }\r\n\r\n  return value;\r\n}\r\n","import { HintQueue } from './hint-queue';\r\nimport { DOMPatcher } from './dom-patcher';\r\nimport { PlaygroundBridge } from './playground-bridge';\r\nimport { IConnectionManager } from './connection-manager';\r\nimport { templateState } from './template-state';\r\nimport { ServerTask, ServerTaskImpl, ServerTaskOptions } from './server-task';\r\nimport { ServerReducer, ServerReducerImpl } from './server-reducer';\r\nimport { setComputedContext } from './useComputed';\r\n\r\n/**\r\n * Component instance context for hooks\r\n */\r\nexport interface ComponentContext {\r\n  componentId: string;\r\n  element: HTMLElement;\r\n  state: Map<string, any>;\r\n  effects: Array<{ callback: () => void | (() => void), deps: any[] | undefined, cleanup?: () => void }>;\r\n  refs: Map<string, { current: any }>;\r\n  serverTasks?: Map<string, ServerTaskImpl<any>>; // For useServerTask integration\r\n  serverReducers?: Map<string, ServerReducerImpl<any, any>>; // For useServerReducer integration\r\n  computedValues?: Map<string, any>; // For useComputed integration\r\n  hintQueue: HintQueue;\r\n  domPatcher: DOMPatcher;\r\n  playgroundBridge?: PlaygroundBridge;\r\n  signalR: IConnectionManager; // For syncing state to server (works with SignalR or SignalM)\r\n  // Note: domElementStates and confidenceWorker are added via module augmentation by minimact-punch\r\n}\r\n\r\n// Global context tracking\r\nlet currentContext: ComponentContext | null = null;\r\nlet stateIndex = 0;\r\nlet effectIndex = 0;\r\nlet refIndex = 0;\r\nlet serverTaskIndex = 0;\r\nlet serverReducerIndex = 0;\r\n\r\n/**\r\n * Set the current component context (called before render)\r\n */\r\nexport function setComponentContext(context: ComponentContext): void {\r\n  currentContext = context;\r\n  stateIndex = 0;\r\n  effectIndex = 0;\r\n  refIndex = 0;\r\n  serverTaskIndex = 0;\r\n  serverReducerIndex = 0;\r\n\r\n  // Reset computed index for useComputed hook\r\n  setComputedContext(context);\r\n}\r\n\r\n/**\r\n * Clear the current component context (called after render)\r\n */\r\nexport function clearComponentContext(): void {\r\n  currentContext = null;\r\n}\r\n\r\n/**\r\n * Find DOM element by path array\r\n * Example: [0, 1, 0] → first child, second child, first child\r\n */\r\nfunction findElementByPath(root: HTMLElement, path: number[]): Node | null {\r\n  let current: Node | null = root;\r\n\r\n  for (const index of path) {\r\n    if (!current || !current.childNodes) return null;\r\n    current = current.childNodes[index] || null;\r\n  }\r\n\r\n  return current;\r\n}\r\n\r\n/**\r\n * useState hook - manages component state with hint queue integration\r\n */\r\nexport function useState<T>(initialValue: T): [T, (newValue: T | ((prev: T) => T)) => void] {\r\n  if (!currentContext) {\r\n    throw new Error('useState must be called within a component render');\r\n  }\r\n\r\n  const context = currentContext;\r\n  const index = stateIndex++;\r\n  const stateKey = `state_${index}`;\r\n\r\n  // Initialize state if not exists\r\n  if (!context.state.has(stateKey)) {\r\n    context.state.set(stateKey, initialValue);\r\n  }\r\n\r\n  const currentValue = context.state.get(stateKey) as T;\r\n\r\n  const setState = (newValue: T | ((prev: T) => T)) => {\r\n    const startTime = performance.now();\r\n\r\n    const actualNewValue = typeof newValue === 'function'\r\n      ? (newValue as (prev: T) => T)(context.state.get(stateKey) as T)\r\n      : newValue;\r\n\r\n    // Build state change object for hint matching\r\n    const stateChanges: Record<string, any> = {\r\n      [stateKey]: actualNewValue\r\n    };\r\n\r\n    // Check hint queue for match\r\n    const hint = context.hintQueue.matchHint(context.componentId, stateChanges);\r\n\r\n    if (hint) {\r\n      // 🟢 CACHE HIT! Apply queued patches immediately\r\n      const latency = performance.now() - startTime;\r\n      console.log(`[Minimact] 🟢 CACHE HIT! Hint '${hint.hintId}' matched - applying ${hint.patches.length} patches in ${latency.toFixed(2)}ms`);\r\n\r\n      context.domPatcher.applyPatches(context.element, hint.patches);\r\n\r\n      // Notify playground of cache hit\r\n      if (context.playgroundBridge) {\r\n        context.playgroundBridge.cacheHit({\r\n          componentId: context.componentId,\r\n          hintId: hint.hintId,\r\n          latency,\r\n          confidence: hint.confidence,\r\n          patchCount: hint.patches.length\r\n        });\r\n      }\r\n    } else {\r\n      // 🔴 CACHE MISS - No prediction found\r\n      const latency = performance.now() - startTime;\r\n      console.log(`[Minimact] 🔴 CACHE MISS - No prediction for state change:`, stateChanges);\r\n\r\n      // Notify playground of cache miss\r\n      if (context.playgroundBridge) {\r\n        context.playgroundBridge.cacheMiss({\r\n          componentId: context.componentId,\r\n          methodName: `setState(${stateKey})`,\r\n          latency,\r\n          patchCount: 0\r\n        });\r\n      }\r\n    }\r\n\r\n    // Update state\r\n    context.state.set(stateKey, actualNewValue);\r\n\r\n    // Update template state for template rendering\r\n    templateState.updateState(context.componentId, stateKey, actualNewValue);\r\n\r\n    // Re-render templates bound to this state\r\n    const boundTemplates = templateState.getTemplatesBoundTo(context.componentId, stateKey);\r\n    for (const template of boundTemplates) {\r\n      // Build node path from template path array\r\n      const nodePath = template.path.join('_');\r\n\r\n      // Render template with new value\r\n      const newText = templateState.render(context.componentId, nodePath);\r\n\r\n      if (newText !== null) {\r\n        // Find DOM element by path and update it\r\n        const element = findElementByPath(context.element, template.path);\r\n        if (element) {\r\n          if (element.nodeType === Node.TEXT_NODE) {\r\n            element.textContent = newText;\r\n          } else if (element instanceof HTMLElement) {\r\n            // For attribute templates\r\n            if (template.attribute) {\r\n              element.setAttribute(template.attribute, newText);\r\n            } else {\r\n              element.textContent = newText;\r\n            }\r\n          }\r\n\r\n          console.log(`[Minimact] 📋 Template updated: \"${newText}\" (${stateKey} changed)`);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sync state to server to prevent stale data\r\n    context.signalR.updateComponentState(context.componentId, stateKey, actualNewValue)\r\n      .catch(err => {\r\n        console.error('[Minimact] Failed to sync state to server:', err);\r\n      });\r\n  };\r\n\r\n  // If value is an array, add array helpers\r\n  if (Array.isArray(currentValue)) {\r\n    return [currentValue, createArrayStateSetter(setState, currentValue, stateKey, context)] as any;\r\n  }\r\n\r\n  return [currentValue, setState];\r\n}\r\n\r\n/**\r\n * useEffect hook - runs side effects after render\r\n */\r\nexport function useEffect(callback: () => void | (() => void), deps?: any[]): void {\r\n  if (!currentContext) {\r\n    throw new Error('useEffect must be called within a component render');\r\n  }\r\n\r\n  const context = currentContext;\r\n  const index = effectIndex++;\r\n\r\n  // Get or create effect entry\r\n  if (!context.effects[index]) {\r\n    context.effects[index] = {\r\n      callback,\r\n      deps,\r\n      cleanup: undefined\r\n    };\r\n\r\n    // Run effect after render\r\n    queueMicrotask(() => {\r\n      const cleanup = callback();\r\n      if (typeof cleanup === 'function') {\r\n        context.effects[index].cleanup = cleanup;\r\n      }\r\n    });\r\n  } else {\r\n    const effect = context.effects[index];\r\n\r\n    // Check if deps changed\r\n    const depsChanged = !deps || !effect.deps ||\r\n      deps.length !== effect.deps.length ||\r\n      deps.some((dep, i) => dep !== effect.deps![i]);\r\n\r\n    if (depsChanged) {\r\n      // Run cleanup if exists\r\n      if (effect.cleanup) {\r\n        effect.cleanup();\r\n      }\r\n\r\n      // Update effect\r\n      effect.callback = callback;\r\n      effect.deps = deps;\r\n\r\n      // Run new effect\r\n      queueMicrotask(() => {\r\n        const cleanup = callback();\r\n        if (typeof cleanup === 'function') {\r\n          effect.cleanup = cleanup;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * useRef hook - creates a mutable ref object\r\n */\r\nexport function useRef<T>(initialValue: T): { current: T } {\r\n  if (!currentContext) {\r\n    throw new Error('useRef must be called within a component render');\r\n  }\r\n\r\n  const context = currentContext;\r\n  const index = refIndex++;\r\n  const refKey = `ref_${index}`;\r\n\r\n  // Initialize ref if not exists\r\n  if (!context.refs.has(refKey)) {\r\n    context.refs.set(refKey, { current: initialValue });\r\n  }\r\n\r\n  return context.refs.get(refKey)!;\r\n}\r\n\r\n/**\r\n * Cleanup all effects for a component\r\n */\r\nexport function cleanupEffects(context: ComponentContext): void {\r\n  for (const effect of context.effects) {\r\n    if (effect.cleanup) {\r\n      effect.cleanup();\r\n    }\r\n  }\r\n  context.effects = [];\r\n}\r\n\r\n/**\r\n * Array operation metadata for semantic state updates\r\n * @public\r\n */\r\nexport interface ArrayOperation {\r\n  type: 'Append' | 'Prepend' | 'InsertAt' | 'RemoveAt' | 'UpdateAt';\r\n  index?: number;\r\n  item?: any;\r\n}\r\n\r\n/**\r\n * Enhanced state setter with array helper methods\r\n */\r\nexport interface ArrayStateSetter<T> {\r\n  // Standard setter (for compatibility)\r\n  (newValue: T[] | ((prev: T[]) => T[])): void;\r\n\r\n  // Array operation helpers\r\n  append(item: T): void;\r\n  prepend(item: T): void;\r\n  insertAt(index: number, item: T): void;\r\n  removeAt(index: number): void;\r\n  updateAt(index: number, updates: Partial<T> | ((prev: T) => T)): void;\r\n  clear(): void;\r\n\r\n  // Batch operations\r\n  appendMany(items: T[]): void;\r\n  removeMany(indices: number[]): void;\r\n\r\n  // Conditional operations\r\n  removeWhere(predicate: (item: T) => boolean): void;\r\n  updateWhere(predicate: (item: T) => boolean, updates: Partial<T>): void;\r\n}\r\n\r\n/**\r\n * Create array state setter with semantic helper methods\r\n */\r\nfunction createArrayStateSetter<T>(\r\n  baseSetState: (value: T[]) => void,\r\n  currentArray: T[],\r\n  stateKey: string,\r\n  context: ComponentContext\r\n): ArrayStateSetter<T> {\r\n  // Base setter function\r\n  const setter: any = baseSetState;\r\n\r\n  // Append helper\r\n  setter.append = (item: T) => {\r\n    const newArray = [...currentArray, item];\r\n\r\n    // Update local state\r\n    context.state.set(stateKey, newArray);\r\n\r\n    // Update template state\r\n    templateState.updateState(context.componentId, stateKey, newArray);\r\n\r\n    // Notify server of APPEND operation (not just new array)\r\n    context.signalR.updateComponentStateWithOperation(\r\n      context.componentId,\r\n      stateKey,\r\n      newArray,\r\n      { type: 'Append', item }\r\n    ).catch(err => {\r\n      console.error('[Minimact] Failed to sync array append to server:', err);\r\n    });\r\n\r\n    // TODO: Try to predict patch using loop template\r\n    console.log(`[Minimact] 🔵 Array append: ${stateKey}`, item);\r\n  };\r\n\r\n  // Prepend helper\r\n  setter.prepend = (item: T) => {\r\n    const newArray = [item, ...currentArray];\r\n\r\n    context.state.set(stateKey, newArray);\r\n    templateState.updateState(context.componentId, stateKey, newArray);\r\n\r\n    context.signalR.updateComponentStateWithOperation(\r\n      context.componentId,\r\n      stateKey,\r\n      newArray,\r\n      { type: 'Prepend', item }\r\n    ).catch(err => {\r\n      console.error('[Minimact] Failed to sync array prepend to server:', err);\r\n    });\r\n\r\n    console.log(`[Minimact] 🔵 Array prepend: ${stateKey}`, item);\r\n  };\r\n\r\n  // InsertAt helper\r\n  setter.insertAt = (index: number, item: T) => {\r\n    const newArray = [...currentArray];\r\n    newArray.splice(index, 0, item);\r\n\r\n    context.state.set(stateKey, newArray);\r\n    templateState.updateState(context.componentId, stateKey, newArray);\r\n\r\n    context.signalR.updateComponentStateWithOperation(\r\n      context.componentId,\r\n      stateKey,\r\n      newArray,\r\n      { type: 'InsertAt', index, item }\r\n    ).catch(err => {\r\n      console.error('[Minimact] Failed to sync array insert to server:', err);\r\n    });\r\n\r\n    console.log(`[Minimact] 🔵 Array insertAt(${index}): ${stateKey}`, item);\r\n  };\r\n\r\n  // RemoveAt helper\r\n  setter.removeAt = (index: number) => {\r\n    const newArray = currentArray.filter((_, i) => i !== index);\r\n\r\n    context.state.set(stateKey, newArray);\r\n    templateState.updateState(context.componentId, stateKey, newArray);\r\n\r\n    context.signalR.updateComponentStateWithOperation(\r\n      context.componentId,\r\n      stateKey,\r\n      newArray,\r\n      { type: 'RemoveAt', index }\r\n    ).catch(err => {\r\n      console.error('[Minimact] Failed to sync array remove to server:', err);\r\n    });\r\n\r\n    console.log(`[Minimact] 🔵 Array removeAt(${index}): ${stateKey}`);\r\n  };\r\n\r\n  // UpdateAt helper\r\n  setter.updateAt = (index: number, updates: Partial<T> | ((prev: T) => T)) => {\r\n    const newArray = [...currentArray];\r\n    newArray[index] = typeof updates === 'function'\r\n      ? (updates as (prev: T) => T)(currentArray[index])\r\n      : { ...currentArray[index] as any, ...updates };\r\n\r\n    context.state.set(stateKey, newArray);\r\n    templateState.updateState(context.componentId, stateKey, newArray);\r\n\r\n    context.signalR.updateComponentStateWithOperation(\r\n      context.componentId,\r\n      stateKey,\r\n      newArray,\r\n      { type: 'UpdateAt', index, item: newArray[index] }\r\n    ).catch(err => {\r\n      console.error('[Minimact] Failed to sync array update to server:', err);\r\n    });\r\n\r\n    console.log(`[Minimact] 🔵 Array updateAt(${index}): ${stateKey}`, newArray[index]);\r\n  };\r\n\r\n  // Clear helper\r\n  setter.clear = () => {\r\n    baseSetState([]);\r\n  };\r\n\r\n  // RemoveWhere helper\r\n  setter.removeWhere = (predicate: (item: T) => boolean) => {\r\n    const newArray = currentArray.filter(item => !predicate(item));\r\n    baseSetState(newArray);\r\n  };\r\n\r\n  // UpdateWhere helper\r\n  setter.updateWhere = (predicate: (item: T) => boolean, updates: Partial<T>) => {\r\n    const newArray = currentArray.map(item =>\r\n      predicate(item) ? { ...item as any, ...updates } : item\r\n    );\r\n    baseSetState(newArray);\r\n  };\r\n\r\n  // AppendMany helper\r\n  setter.appendMany = (items: T[]) => {\r\n    const newArray = [...currentArray, ...items];\r\n    baseSetState(newArray);\r\n  };\r\n\r\n  // RemoveMany helper\r\n  setter.removeMany = (indices: number[]) => {\r\n    const newArray = currentArray.filter((_, i) => !indices.includes(i));\r\n    baseSetState(newArray);\r\n  };\r\n\r\n  return setter as ArrayStateSetter<T>;\r\n}\r\n\r\n/**\r\n * useServerTask - Execute long-running operations on the server with reactive client state\r\n *\r\n * @param taskFactory - Optional async function (will be transpiled to C# by Babel plugin)\r\n * @param options - Configuration options for the server task\r\n * @returns ServerTask interface with status, result, and control methods\r\n *\r\n * @example\r\n * const analysis = useServerTask(async () => {\r\n *   // This code runs on the SERVER (transpiled to C#)\r\n *   const data = await fetchData();\r\n *   return processData(data);\r\n * });\r\n *\r\n * // In JSX:\r\n * <button onClick={analysis.start}>Start</button>\r\n * {analysis.running && <Spinner />}\r\n * {analysis.complete && <div>{analysis.result}</div>}\r\n */\r\nexport function useServerTask<T>(\r\n  taskFactory?: () => Promise<T>,\r\n  options: ServerTaskOptions = {}\r\n): ServerTask<T> {\r\n  if (!currentContext) {\r\n    throw new Error('useServerTask must be called within a component render');\r\n  }\r\n\r\n  const context = currentContext;\r\n  const index = serverTaskIndex++;\r\n  const taskKey = `serverTask_${index}`;\r\n\r\n  // Initialize serverTasks map if not exists\r\n  if (!context.serverTasks) {\r\n    context.serverTasks = new Map();\r\n  }\r\n\r\n  // Get or create server task instance\r\n  if (!context.serverTasks.has(taskKey)) {\r\n    const task = new ServerTaskImpl<T>(\r\n      taskKey,\r\n      context.componentId,\r\n      context.signalR,\r\n      context,\r\n      options\r\n    );\r\n\r\n    context.serverTasks.set(taskKey, task);\r\n  }\r\n\r\n  return context.serverTasks.get(taskKey)!;\r\n}\r\n\r\n/**\r\n * useServerReducer - React-like reducer that executes on the server\r\n *\r\n * Similar to React's useReducer, but the reducer function runs on the server side.\r\n * This allows complex state transitions with validation, side effects, and database\r\n * operations to happen server-side while maintaining reactive UI updates.\r\n *\r\n * @example\r\n * ```tsx\r\n * type CounterState = { count: number };\r\n * type CounterAction = { type: 'increment' } | { type: 'decrement' } | { type: 'set', value: number };\r\n *\r\n * const counter = useServerReducer<CounterState, CounterAction>({ count: 0 });\r\n *\r\n * // In JSX:\r\n * <button onClick={() => counter.dispatch({ type: 'increment' })}>+</button>\r\n * <span>{counter.state.count}</span>\r\n * <button onClick={() => counter.dispatch({ type: 'decrement' })}>-</button>\r\n * {counter.dispatching && <Spinner />}\r\n * {counter.error && <div>Error: {counter.error.message}</div>}\r\n * ```\r\n *\r\n * @example\r\n * ```tsx\r\n * // With async dispatch (await the result)\r\n * const handleReset = async () => {\r\n *   const newState = await counter.dispatchAsync({ type: 'set', value: 0 });\r\n *   console.log('Counter reset to:', newState.count);\r\n * };\r\n * ```\r\n */\r\nexport function useServerReducer<TState, TAction>(\r\n  initialState: TState\r\n): ServerReducer<TState, TAction> {\r\n  if (!currentContext) {\r\n    throw new Error('useServerReducer must be called within a component render');\r\n  }\r\n\r\n  const context = currentContext;\r\n  const index = serverReducerIndex++;\r\n  const reducerKey = `serverReducer_${index}`;\r\n\r\n  // Initialize serverReducers map if not exists\r\n  if (!context.serverReducers) {\r\n    context.serverReducers = new Map();\r\n  }\r\n\r\n  // Get or create server reducer instance\r\n  if (!context.serverReducers.has(reducerKey)) {\r\n    const reducer = new ServerReducerImpl<TState, TAction>(\r\n      reducerKey,\r\n      context.componentId,\r\n      context.signalR,\r\n      context,\r\n      initialState\r\n    );\r\n\r\n    context.serverReducers.set(reducerKey, reducer);\r\n  }\r\n\r\n  return context.serverReducers.get(reducerKey)!;\r\n}\r\n","/**\r\n * useContext - Server-side cache system with multiple scope types\r\n *\r\n * This reimagines React's context API as a Redis-like in-memory cache\r\n * that enables shared state across components with flexible lifetime management.\r\n */\r\n\r\nimport type { ComponentContext } from './hooks';\r\n\r\nexport interface ContextOptions {\r\n  scope?: 'request' | 'session' | 'application' | 'url';\r\n  urlPattern?: string;\r\n  expiry?: number;\r\n  defaultValue?: any;\r\n}\r\n\r\nexport interface Context<T> {\r\n  key: string;\r\n  options: ContextOptions;\r\n}\r\n\r\nlet currentContext: ComponentContext | null = null;\r\n\r\n/**\r\n * Set the current component context for hook execution\r\n * Called internally by Minimact before rendering\r\n */\r\nexport function setContextHookContext(context: ComponentContext): void {\r\n  currentContext = context;\r\n}\r\n\r\n/**\r\n * Clear the current component context after rendering\r\n * Called internally by Minimact after rendering\r\n */\r\nexport function clearContextHookContext(): void {\r\n  currentContext = null;\r\n}\r\n\r\n/**\r\n * Create a context with specified scope and options\r\n *\r\n * @example\r\n * // Session-scoped user context\r\n * const UserContext = createContext<User>('current-user', {\r\n *   scope: 'session',\r\n *   expiry: 3600000 // 1 hour\r\n * });\r\n *\r\n * @example\r\n * // URL-scoped dashboard filters\r\n * const DashboardFilters = createContext<Filters>('dashboard-filters', {\r\n *   scope: 'url',\r\n *   urlPattern: '/dashboard/*',\r\n *   expiry: 3600000\r\n * });\r\n */\r\nexport function createContext<T>(\r\n  key: string,\r\n  options: ContextOptions = {}\r\n): Context<T> {\r\n  // Validate URL pattern if scope is 'url'\r\n  if (options.scope === 'url' && !options.urlPattern) {\r\n    throw new Error(`Context '${key}' with scope 'url' requires urlPattern`);\r\n  }\r\n\r\n  return {\r\n    key,\r\n    options: {\r\n      scope: options.scope || 'request',\r\n      urlPattern: options.urlPattern,\r\n      expiry: options.expiry,\r\n      defaultValue: options.defaultValue\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Use a context - returns [value, setValue, clearValue]\r\n *\r\n * Unlike React's useContext, this doesn't require a Provider component.\r\n * The context is stored server-side in a cache with the specified scope.\r\n *\r\n * @returns Tuple of [value, setValue, clearValue]\r\n *\r\n * @example\r\n * // Read and write to context\r\n * function LoginForm() {\r\n *   const [_, setUser] = useContext(UserContext);\r\n *\r\n *   const handleLogin = async (credentials) => {\r\n *     const user = await authenticate(credentials);\r\n *     setUser(user); // Stored in session-scoped cache\r\n *   };\r\n *\r\n *   return <form onSubmit={handleLogin}>...</form>;\r\n * }\r\n *\r\n * @example\r\n * // Read from context (different component, no parent-child relationship needed)\r\n * function UserProfile() {\r\n *   const [user] = useContext(UserContext);\r\n *\r\n *   if (!user) return <Login />;\r\n *   return <div>Welcome, {user.name}</div>;\r\n * }\r\n */\r\nexport function useContext<T>(\r\n  context: Context<T>\r\n): [T | undefined, (value: T) => void, () => void] {\r\n  if (!currentContext) {\r\n    throw new Error('[Minimact] useContext must be called within a component render');\r\n  }\r\n\r\n  const ctx = currentContext;\r\n  const stateKey = `context_${context.key}`;\r\n\r\n  // Get current value from component state (initialized from server)\r\n  let currentValue = ctx.state.get(stateKey) as T | undefined;\r\n\r\n  // If no value and has default, use default\r\n  if (currentValue === undefined && context.options.defaultValue !== undefined) {\r\n    currentValue = context.options.defaultValue;\r\n  }\r\n\r\n  // Setter - updates local state and syncs to server\r\n  const setContextValue = (newValue: T) => {\r\n    // Update local state immediately for instant feedback\r\n    ctx.state.set(stateKey, newValue);\r\n\r\n    // Apply any cached patches if available\r\n    const stateChanges: Record<string, any> = {\r\n      [stateKey]: newValue\r\n    };\r\n    const hint = ctx.hintQueue.matchHint(ctx.componentId, stateChanges);\r\n    if (hint) {\r\n      ctx.domPatcher.applyPatches(ctx.element, hint.patches);\r\n    }\r\n\r\n    // Sync to server cache\r\n    ctx.signalR.invoke('UpdateContext', {\r\n      key: context.key,\r\n      value: newValue,\r\n      scope: context.options.scope,\r\n      urlPattern: context.options.urlPattern,\r\n      expiry: context.options.expiry\r\n    }).catch(err => {\r\n      console.error(`[Minimact] Failed to update context '${context.key}':`, err);\r\n    });\r\n  };\r\n\r\n  // Clear - removes value from cache\r\n  const clearContextValue = () => {\r\n    // Clear local state\r\n    ctx.state.set(stateKey, undefined);\r\n\r\n    // Apply any cached patches if available\r\n    const stateChanges: Record<string, any> = {\r\n      [stateKey]: undefined\r\n    };\r\n    const hint = ctx.hintQueue.matchHint(ctx.componentId, stateChanges);\r\n    if (hint) {\r\n      ctx.domPatcher.applyPatches(ctx.element, hint.patches);\r\n    }\r\n\r\n    // Sync to server cache\r\n    ctx.signalR.invoke('ClearContext', {\r\n      key: context.key,\r\n      scope: context.options.scope,\r\n      urlPattern: context.options.urlPattern\r\n    }).catch(err => {\r\n      console.error(`[Minimact] Failed to clear context '${context.key}':`, err);\r\n    });\r\n  };\r\n\r\n  return [currentValue, setContextValue, clearContextValue];\r\n}\r\n","/**\r\n * usePaginatedServerTask - Pagination built on useServerTask\r\n *\r\n * Extends the existing useServerTask infrastructure to add pagination capabilities.\r\n * Reuses transpilers, FFI bridge, and task runtime for zero additional complexity.\r\n */\r\n\r\nimport { useServerTask } from './hooks';\r\nimport { useState, useEffect, useRef } from './hooks';\r\nimport { ServerTaskOptions } from './server-task';\r\n\r\n/**\r\n * Pagination parameters passed to the fetch function\r\n */\r\nexport interface PaginationParams<TFilter = any> {\r\n  page: number;\r\n  pageSize: number;\r\n  filters: TFilter;\r\n}\r\n\r\n/**\r\n * Options for configuring a paginated server task\r\n */\r\nexport interface PaginatedServerTaskOptions<T, TFilter = any> {\r\n  /** Number of items per page (default: 20) */\r\n  pageSize?: number;\r\n\r\n  /** Function to get total count (for calculating total pages) */\r\n  getTotalCount: (filters: TFilter) => Promise<number>;\r\n\r\n  /** Enable automatic prefetching of next page (default: false) */\r\n  prefetchNext?: boolean;\r\n\r\n  /** Enable automatic prefetching of previous page (default: false) */\r\n  prefetchPrev?: boolean;\r\n\r\n  /** Dependencies that trigger re-fetch when changed */\r\n  dependencies?: any[];\r\n\r\n  /** Runtime selection: 'csharp' or 'rust' (inherited from useServerTask) */\r\n  runtime?: 'csharp' | 'rust';\r\n\r\n  /** Enable parallel execution (for Rust runtime with Rayon) */\r\n  parallel?: boolean;\r\n}\r\n\r\n/**\r\n * Paginated server task result\r\n */\r\nexport interface PaginatedServerTask<T> {\r\n  // Data\r\n  items: T[];\r\n  total: number;\r\n  totalPages: number;\r\n\r\n  // State\r\n  page: number;\r\n  pageSize: number;\r\n  pending: boolean;\r\n  error?: string;\r\n\r\n  // Navigation\r\n  hasNext: boolean;\r\n  hasPrev: boolean;\r\n  next: () => void;\r\n  prev: () => void;\r\n  goto: (page: number) => void;\r\n  refresh: () => void;\r\n\r\n  // Advanced: Access to underlying tasks\r\n  _fetchTask: any;\r\n  _countTask: any;\r\n}\r\n\r\n/**\r\n * usePaginatedServerTask Hook\r\n *\r\n * Wraps useServerTask to provide pagination with intelligent prefetching.\r\n *\r\n * @example\r\n * const users = usePaginatedServerTask(\r\n *   async ({ page, pageSize, filters }) => {\r\n *     return await db.users\r\n *       .where(u => filters.role ? u.role === filters.role : true)\r\n *       .skip((page - 1) * pageSize)\r\n *       .take(pageSize)\r\n *       .toList();\r\n *   },\r\n *   {\r\n *     pageSize: 20,\r\n *     getTotalCount: async (filters) => {\r\n *       return await db.users\r\n *         .where(u => filters.role ? u.role === filters.role : true)\r\n *         .count();\r\n *     },\r\n *     prefetchNext: true,\r\n *     dependencies: [filters]\r\n *   }\r\n * );\r\n */\r\nexport function usePaginatedServerTask<T, TFilter = any>(\r\n  fetchFn: (params: PaginationParams<TFilter>) => Promise<T[]>,\r\n  options: PaginatedServerTaskOptions<T, TFilter>\r\n): PaginatedServerTask<T> {\r\n  const pageSize = options.pageSize || 20;\r\n\r\n  // State\r\n  const [page, setPage] = useState(1);\r\n  const [items, setItems] = useState<T[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Prefetch cache\r\n  const prefetchCache = useRef<Map<number, T[]>>(new Map());\r\n\r\n  // Last args (for retry)\r\n  const lastArgs = useRef<any[]>([]);\r\n\r\n  // Build current filters from dependencies\r\n  const filters = buildFilters(options.dependencies);\r\n\r\n  // ✅ Reuse useServerTask for fetch logic!\r\n  // Note: The actual function is passed via Babel transpilation\r\n  // At runtime, we just get a task instance and call .start(args)\r\n  const fetchTask = useServerTask<T[]>(\r\n    undefined, // Function extracted by Babel plugin\r\n    {\r\n      runtime: options.runtime,\r\n      parallel: options.parallel\r\n    } as ServerTaskOptions\r\n  );\r\n\r\n  // ✅ Reuse useServerTask for count query!\r\n  const countTask = useServerTask<number>(\r\n    undefined, // Function extracted by Babel plugin\r\n    { runtime: options.runtime } as ServerTaskOptions\r\n  );\r\n\r\n  /**\r\n   * Fetch a specific page\r\n   */\r\n  const fetchPage = async (targetPage: number, fromCache = true) => {\r\n    // Check prefetch cache\r\n    if (fromCache && prefetchCache.current.has(targetPage)) {\r\n      const cached = prefetchCache.current.get(targetPage)!;\r\n      setItems(cached);\r\n      setPage(targetPage);\r\n      prefetchCache.current.delete(targetPage);\r\n\r\n      console.log(`[usePaginatedServerTask] 🟢 Cache hit for page ${targetPage}`);\r\n\r\n      // Trigger next prefetch\r\n      if (options.prefetchNext && targetPage < totalPages) {\r\n        prefetchInBackground(targetPage + 1);\r\n      }\r\n\r\n      if (options.prefetchPrev && targetPage > 1) {\r\n        prefetchInBackground(targetPage - 1);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // Fetch from server via useServerTask\r\n    const args = {\r\n      page: targetPage,\r\n      pageSize,\r\n      filters\r\n    };\r\n\r\n    lastArgs.current = [args];\r\n\r\n    fetchTask.start(args);\r\n\r\n    // Wait for completion (using promise)\r\n    try {\r\n      const result = await fetchTask.promise;\r\n\r\n      setItems(result as T[]);\r\n      setPage(targetPage);\r\n      setError(null);\r\n\r\n      console.log(`[usePaginatedServerTask] 🔴 Fetched page ${targetPage} from server`);\r\n\r\n      // Prefetch adjacent pages if configured\r\n      if (options.prefetchNext && targetPage < totalPages) {\r\n        prefetchInBackground(targetPage + 1);\r\n      }\r\n\r\n      if (options.prefetchPrev && targetPage > 1) {\r\n        prefetchInBackground(targetPage - 1);\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to fetch page');\r\n      console.error(`[usePaginatedServerTask] Error fetching page ${targetPage}:`, err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Prefetch in background (non-blocking)\r\n   */\r\n  const prefetchInBackground = async (targetPage: number) => {\r\n    if (prefetchCache.current.has(targetPage)) {\r\n      return; // Already cached\r\n    }\r\n\r\n    const args = {\r\n      page: targetPage,\r\n      pageSize,\r\n      filters\r\n    };\r\n\r\n    // Create a separate task instance for prefetching\r\n    // Note: This will be optimized later to reuse task instances\r\n    fetchTask.start(args);\r\n\r\n    try {\r\n      const result = await fetchTask.promise;\r\n      prefetchCache.current.set(targetPage, result as T[]);\r\n      console.log(`[usePaginatedServerTask] ⚡ Prefetched page ${targetPage}`);\r\n    } catch (err) {\r\n      console.error(`[usePaginatedServerTask] Prefetch failed for page ${targetPage}:`, err);\r\n      // Silently fail - prefetch is optional\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get total count on mount and when filters change\r\n   */\r\n  useEffect(() => {\r\n    countTask.start(filters);\r\n\r\n    countTask.promise.then((count) => {\r\n      setTotal(count as number);\r\n    }).catch((err) => {\r\n      console.error('[usePaginatedServerTask] Failed to get total count:', err);\r\n    });\r\n  }, [JSON.stringify(filters)]);\r\n\r\n  /**\r\n   * Initial fetch\r\n   */\r\n  useEffect(() => {\r\n    fetchPage(1, false);\r\n  }, []);\r\n\r\n  /**\r\n   * Re-fetch when dependencies change\r\n   */\r\n  useEffect(() => {\r\n    if (options.dependencies && options.dependencies.length > 0) {\r\n      prefetchCache.current.clear();\r\n      fetchPage(1, false);\r\n    }\r\n  }, [JSON.stringify(filters)]);\r\n\r\n  // Computed properties\r\n  const totalPages = Math.ceil(total / pageSize);\r\n  const hasNext = page < totalPages;\r\n  const hasPrev = page > 1;\r\n\r\n  // Navigation methods\r\n  const next = () => {\r\n    if (hasNext) {\r\n      fetchPage(page + 1);\r\n    }\r\n  };\r\n\r\n  const prev = () => {\r\n    if (hasPrev) {\r\n      fetchPage(page - 1);\r\n    }\r\n  };\r\n\r\n  const goto = (targetPage: number) => {\r\n    if (targetPage >= 1 && targetPage <= totalPages) {\r\n      fetchPage(targetPage);\r\n    }\r\n  };\r\n\r\n  const refresh = () => {\r\n    prefetchCache.current.clear();\r\n    fetchPage(page, false);\r\n  };\r\n\r\n  return {\r\n    // Data\r\n    items,\r\n    total,\r\n    totalPages,\r\n\r\n    // State\r\n    page,\r\n    pageSize,\r\n    pending: fetchTask.status === 'running',\r\n    error: error || fetchTask.error?.message,\r\n\r\n    // Navigation\r\n    hasNext,\r\n    hasPrev,\r\n    next,\r\n    prev,\r\n    goto,\r\n    refresh,\r\n\r\n    // ✅ Expose underlying tasks for advanced use\r\n    _fetchTask: fetchTask,\r\n    _countTask: countTask\r\n  };\r\n}\r\n\r\n/**\r\n * Helper: Build filters object from dependencies array\r\n */\r\nfunction buildFilters(dependencies?: any[]): any {\r\n  if (!dependencies || dependencies.length === 0) {\r\n    return {};\r\n  }\r\n\r\n  // If single object, use as-is\r\n  if (dependencies.length === 1 && typeof dependencies[0] === 'object') {\r\n    return dependencies[0];\r\n  }\r\n\r\n  // Otherwise, create indexed object\r\n  return dependencies.reduce((acc, dep, i) => {\r\n    acc[`dep${i}`] = dep;\r\n    return acc;\r\n  }, {} as Record<string, any>);\r\n}\r\n","/**\r\n * Client-side pub/sub event aggregator\r\n * Enables component-to-component communication without prop drilling\r\n */\r\n\r\nexport interface PubSubMessage<T = any> {\r\n  value: T;\r\n  error?: string;\r\n  waiting?: number;\r\n  source?: string;\r\n  timestamp: number;\r\n  isStale?: boolean;\r\n}\r\n\r\ntype Subscriber<T = any> = (message: PubSubMessage<T>) => void;\r\n\r\n/**\r\n * Global event aggregator for client-side pub/sub\r\n */\r\nclass EventAggregator {\r\n  private channels: Map<string, {\r\n    subscribers: Set<Subscriber>;\r\n    lastMessage: PubSubMessage | null;\r\n  }> = new Map();\r\n\r\n  private debugLogging: boolean = false;\r\n\r\n  constructor(options: { debugLogging?: boolean } = {}) {\r\n    this.debugLogging = options.debugLogging || false;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to a channel\r\n   */\r\n  subscribe<T = any>(\r\n    channel: string,\r\n    callback?: Subscriber<T>\r\n  ): PubSubMessage<T> {\r\n    if (!this.channels.has(channel)) {\r\n      this.channels.set(channel, {\r\n        subscribers: new Set(),\r\n        lastMessage: null\r\n      });\r\n    }\r\n\r\n    const channelData = this.channels.get(channel)!;\r\n\r\n    // Add callback if provided\r\n    if (callback) {\r\n      channelData.subscribers.add(callback as Subscriber);\r\n    }\r\n\r\n    // Return reactive message object\r\n    const message: PubSubMessage<T> = channelData.lastMessage || {\r\n      value: undefined as T,\r\n      timestamp: Date.now()\r\n    };\r\n\r\n    this.log(`Subscribed to '${channel}'`, { hasCallback: !!callback });\r\n\r\n    return message;\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from a channel\r\n   */\r\n  unsubscribe(channel: string, callback: Subscriber): void {\r\n    const channelData = this.channels.get(channel);\r\n    if (channelData) {\r\n      channelData.subscribers.delete(callback);\r\n      this.log(`Unsubscribed from '${channel}'`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Publish a message to a channel\r\n   */\r\n  publish<T = any>(\r\n    channel: string,\r\n    value: T,\r\n    options: {\r\n      source?: string;\r\n      error?: string;\r\n      waiting?: number;\r\n    } = {}\r\n  ): void {\r\n    if (!this.channels.has(channel)) {\r\n      this.channels.set(channel, {\r\n        subscribers: new Set(),\r\n        lastMessage: null\r\n      });\r\n    }\r\n\r\n    const channelData = this.channels.get(channel)!;\r\n\r\n    const message: PubSubMessage<T> = {\r\n      value,\r\n      error: options.error,\r\n      waiting: options.waiting,\r\n      source: options.source,\r\n      timestamp: Date.now(),\r\n      isStale: false\r\n    };\r\n\r\n    // Update last message\r\n    channelData.lastMessage = message;\r\n\r\n    // Notify all subscribers\r\n    channelData.subscribers.forEach(subscriber => {\r\n      try {\r\n        subscriber(message);\r\n      } catch (error) {\r\n        console.error(`[Minimact PubSub] Error in subscriber for '${channel}':`, error);\r\n      }\r\n    });\r\n\r\n    this.log(`Published to '${channel}'`, {\r\n      subscribers: channelData.subscribers.size,\r\n      value\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear a channel\r\n   */\r\n  clear(channel: string): void {\r\n    this.channels.delete(channel);\r\n    this.log(`Cleared channel '${channel}'`);\r\n  }\r\n\r\n  /**\r\n   * Clear all channels\r\n   */\r\n  clearAll(): void {\r\n    this.channels.clear();\r\n    this.log('Cleared all channels');\r\n  }\r\n\r\n  /**\r\n   * Get stats\r\n   */\r\n  getStats() {\r\n    return {\r\n      totalChannels: this.channels.size,\r\n      channels: Array.from(this.channels.entries()).map(([name, data]) => ({\r\n        name,\r\n        subscribers: data.subscribers.size,\r\n        hasLastMessage: !!data.lastMessage\r\n      }))\r\n    };\r\n  }\r\n\r\n  private log(message: string, data?: any): void {\r\n    if (this.debugLogging) {\r\n      console.log(`[Minimact PubSub] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n\r\n// Global singleton instance\r\nlet globalAggregator: EventAggregator | null = null;\r\n\r\nexport function getEventAggregator(options?: { debugLogging?: boolean }): EventAggregator {\r\n  if (!globalAggregator) {\r\n    globalAggregator = new EventAggregator(options);\r\n  }\r\n  return globalAggregator;\r\n}\r\n\r\n/**\r\n * Hook: usePub - Publish to a channel\r\n */\r\nexport function usePub<T = any>(channel: string): (value: T, options?: {\r\n  source?: string;\r\n  error?: string;\r\n  waiting?: number;\r\n}) => void {\r\n  const aggregator = getEventAggregator();\r\n\r\n  return (value: T, options = {}) => {\r\n    aggregator.publish(channel, value, options);\r\n  };\r\n}\r\n\r\n/**\r\n * Hook: useSub - Subscribe to a channel\r\n */\r\nexport function useSub<T = any>(\r\n  channel: string,\r\n  callback?: (message: PubSubMessage<T>) => void\r\n): PubSubMessage<T> {\r\n  const aggregator = getEventAggregator();\r\n\r\n  // Subscribe and return reactive message object\r\n  const message = aggregator.subscribe<T>(channel, callback);\r\n\r\n  // TODO: Integrate with component lifecycle for auto-unsubscribe\r\n  // For now, developers must manually unsubscribe or we rely on component unmount\r\n\r\n  return message;\r\n}\r\n","/**\r\n * Task scheduling hooks for fine-grained render timing control\r\n * useMicroTask - runs before paint (microtask queue)\r\n * useMacroTask - runs after paint (task queue)\r\n */\r\n\r\n/**\r\n * Hook: useMicroTask\r\n * Schedules a callback to run in the microtask queue (before next paint)\r\n * Perfect for: DOM measurements, layout calculations, critical updates\r\n */\r\nexport function useMicroTask(callback: () => void): void {\r\n  queueMicrotask(() => {\r\n    try {\r\n      callback();\r\n    } catch (error) {\r\n      console.error('[Minimact useMicroTask] Error in microtask:', error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Hook: useMacroTask\r\n * Schedules a callback to run in the task queue (after paint)\r\n * Perfect for: Analytics, logging, non-critical updates, deferred work\r\n */\r\nexport function useMacroTask(callback: () => void, delay: number = 0): void {\r\n  setTimeout(() => {\r\n    try {\r\n      callback();\r\n    } catch (error) {\r\n      console.error('[Minimact useMacroTask] Error in macrotask:', error);\r\n    }\r\n  }, delay);\r\n}\r\n\r\n/**\r\n * Hook: useAnimationFrame\r\n * Schedules a callback for the next animation frame\r\n * Perfect for: Animations, visual updates, smooth transitions\r\n */\r\nexport function useAnimationFrame(callback: (timestamp: number) => void): number {\r\n  const rafId = requestAnimationFrame((timestamp) => {\r\n    try {\r\n      callback(timestamp);\r\n    } catch (error) {\r\n      console.error('[Minimact useAnimationFrame] Error in animation frame:', error);\r\n    }\r\n  });\r\n\r\n  return rafId;\r\n}\r\n\r\n/**\r\n * Hook: useIdleCallback\r\n * Schedules a callback for when the browser is idle\r\n * Perfect for: Low-priority work, background tasks, optimization\r\n */\r\nexport function useIdleCallback(\r\n  callback: (deadline: IdleDeadline) => void,\r\n  options?: IdleRequestOptions\r\n): number {\r\n  if ('requestIdleCallback' in window) {\r\n    return requestIdleCallback((deadline) => {\r\n      try {\r\n        callback(deadline);\r\n      } catch (error) {\r\n        console.error('[Minimact useIdleCallback] Error in idle callback:', error);\r\n      }\r\n    }, options);\r\n  } else {\r\n    // Fallback to setTimeout for browsers without requestIdleCallback\r\n    return setTimeout(() => {\r\n      const deadline: IdleDeadline = {\r\n        didTimeout: false,\r\n        timeRemaining: () => 50\r\n      };\r\n      callback(deadline);\r\n    }, 1) as unknown as number;\r\n  }\r\n}\r\n\r\n/**\r\n * Cancel an animation frame\r\n */\r\nexport function cancelAnimationFrame(id: number): void {\r\n  window.cancelAnimationFrame(id);\r\n}\r\n\r\n/**\r\n * Cancel an idle callback\r\n */\r\nexport function cancelIdleCallback(id: number): void {\r\n  if ('cancelIdleCallback' in window) {\r\n    window.cancelIdleCallback(id);\r\n  } else {\r\n    clearTimeout(id);\r\n  }\r\n}\r\n","import { SignalRManager } from './signalr-manager';\r\n\r\n/**\r\n * SignalR hook state\r\n */\r\nexport interface SignalRHookState<T = any> {\r\n  data: T | null;\r\n  error: string | null;\r\n  connected: boolean;\r\n  connectionId: string | null;\r\n}\r\n\r\n/**\r\n * Hook: useSignalR\r\n * Connects to a SignalR hub and provides real-time updates\r\n *\r\n * Usage:\r\n * const notifications = useSignalR('/hubs/notifications', (message) => {\r\n *   console.log('New notification:', message);\r\n * });\r\n */\r\nexport function useSignalR<T = any>(\r\n  hubUrl: string,\r\n  onMessage?: (data: T) => void,\r\n  options: {\r\n    reconnectInterval?: number;\r\n    debugLogging?: boolean;\r\n    autoConnect?: boolean;\r\n  } = {}\r\n): {\r\n  state: SignalRHookState<T>;\r\n  send: (methodName: string, ...args: any[]) => Promise<void>;\r\n  on: (methodName: string, handler: (...args: any[]) => void) => void;\r\n  off: (methodName: string, handler: (...args: any[]) => void) => void;\r\n  connect: () => Promise<void>;\r\n  disconnect: () => Promise<void>;\r\n} {\r\n  // Create SignalR manager for this hub\r\n  const manager = new SignalRManager(hubUrl, {\r\n    reconnectInterval: options.reconnectInterval,\r\n    debugLogging: options.debugLogging\r\n  });\r\n\r\n  // Initialize state\r\n  const state: SignalRHookState<T> = {\r\n    data: null,\r\n    error: null,\r\n    connected: false,\r\n    connectionId: null\r\n  };\r\n\r\n  // Setup event handlers\r\n  manager.on('connected', ({ connectionId }) => {\r\n    state.connected = true;\r\n    state.connectionId = connectionId || null;\r\n    state.error = null;\r\n  });\r\n\r\n  manager.on('reconnected', ({ connectionId }) => {\r\n    state.connected = true;\r\n    state.connectionId = connectionId || null;\r\n    state.error = null;\r\n  });\r\n\r\n  manager.on('closed', ({ error }) => {\r\n    state.connected = false;\r\n    state.connectionId = null;\r\n    if (error) {\r\n      state.error = error.toString();\r\n    }\r\n  });\r\n\r\n  manager.on('error', ({ message }) => {\r\n    state.error = message;\r\n  });\r\n\r\n  // Setup message handler if provided\r\n  if (onMessage) {\r\n    manager.on('message', (data: T) => {\r\n      state.data = data;\r\n      onMessage(data);\r\n    });\r\n  }\r\n\r\n  // Auto-connect if enabled (default: true)\r\n  if (options.autoConnect !== false) {\r\n    manager.start().catch(error => {\r\n      state.error = error.message;\r\n      console.error('[Minimact useSignalR] Auto-connect failed:', error);\r\n    });\r\n  }\r\n\r\n  return {\r\n    state,\r\n    send: async (methodName: string, ...args: any[]) => {\r\n      try {\r\n        await manager.connection.invoke(methodName, ...args);\r\n      } catch (error: any) {\r\n        state.error = error.message;\r\n        throw error;\r\n      }\r\n    },\r\n    on: (methodName: string, handler: (...args: any[]) => void) => {\r\n      manager.connection.on(methodName, handler);\r\n    },\r\n    off: (methodName: string, handler: (...args: any[]) => void) => {\r\n      manager.connection.off(methodName, handler);\r\n    },\r\n    connect: async () => {\r\n      await manager.start();\r\n    },\r\n    disconnect: async () => {\r\n      await manager.stop();\r\n    }\r\n  };\r\n}\r\n","import { SignalRManager } from './signalr-manager';\r\nimport { DOMPatcher } from './dom-patcher';\r\nimport { ClientStateManager } from './client-state';\r\nimport { EventDelegation } from './event-delegation';\r\nimport { HydrationManager } from './hydration';\r\nimport { HintQueue } from './hint-queue';\r\nimport { PlaygroundBridge } from './playground-bridge';\r\nimport { HotReloadManager } from './hot-reload';\r\nimport * as ClientComputed from './client-computed';\r\nimport { MinimactOptions, Patch } from './types';\r\n\r\n/**\r\n * Main Minimact client runtime\r\n * Orchestrates SignalR, DOM patching, state management, and hydration\r\n */\r\nexport class Minimact {\r\n  private signalR: SignalRManager;\r\n  private domPatcher: DOMPatcher;\r\n  private clientState: ClientStateManager;\r\n  private hydration: HydrationManager;\r\n  private hintQueue: HintQueue;\r\n  private playgroundBridge: PlaygroundBridge;\r\n  private eventDelegation: EventDelegation | null = null;\r\n  private options: Required<MinimactOptions>;\r\n  private rootElement: HTMLElement;\r\n\r\n  constructor(rootElement: HTMLElement | string = document.body, options: MinimactOptions = {}) {\r\n    // Resolve root element\r\n    if (typeof rootElement === 'string') {\r\n      const element = document.querySelector(rootElement);\r\n      if (!element) {\r\n        throw new Error(`[Minimact] Root element not found: ${rootElement}`);\r\n      }\r\n      this.rootElement = element as HTMLElement;\r\n    } else {\r\n      this.rootElement = rootElement;\r\n    }\r\n\r\n    // Default options\r\n    this.options = {\r\n      hubUrl: options.hubUrl || '/minimact',\r\n      enableDebugLogging: options.enableDebugLogging || false,\r\n      reconnectInterval: options.reconnectInterval || 5000\r\n    };\r\n\r\n    // Initialize subsystems\r\n    this.signalR = new SignalRManager(this.options.hubUrl, {\r\n      reconnectInterval: this.options.reconnectInterval,\r\n      debugLogging: this.options.enableDebugLogging\r\n    });\r\n\r\n    this.domPatcher = new DOMPatcher({\r\n      debugLogging: this.options.enableDebugLogging\r\n    });\r\n\r\n    this.clientState = new ClientStateManager({\r\n      debugLogging: this.options.enableDebugLogging\r\n    });\r\n\r\n    this.hydration = new HydrationManager(this.clientState, {\r\n      debugLogging: this.options.enableDebugLogging\r\n    });\r\n\r\n    this.hintQueue = new HintQueue({\r\n      debugLogging: this.options.enableDebugLogging\r\n    });\r\n\r\n    this.playgroundBridge = new PlaygroundBridge({\r\n      debugLogging: this.options.enableDebugLogging\r\n    });\r\n\r\n    // Enable debug logging for client-computed module\r\n    ClientComputed.setDebugLogging(this.options.enableDebugLogging);\r\n\r\n    this.setupSignalRHandlers();\r\n    this.log('Minimact initialized', { rootElement: this.rootElement, options: this.options });\r\n  }\r\n\r\n  /**\r\n   * Start the Minimact runtime\r\n   */\r\n  async start(): Promise<void> {\r\n    // Connect to SignalR hub\r\n    await this.signalR.start();\r\n\r\n    // Hydrate all components\r\n    this.hydration.hydrateAll();\r\n\r\n    // Setup event delegation\r\n    this.eventDelegation = new EventDelegation(\r\n      this.rootElement,\r\n      (componentId, methodName, args) => this.signalR.invokeComponentMethod(componentId, methodName, args),\r\n      { debugLogging: this.options.enableDebugLogging }\r\n    );\r\n\r\n    // Register all components with server\r\n    await this.registerAllComponents();\r\n\r\n    this.log('Minimact started');\r\n  }\r\n\r\n  /**\r\n   * Stop the Minimact runtime\r\n   */\r\n  async stop(): Promise<void> {\r\n    if (this.eventDelegation) {\r\n      this.eventDelegation.destroy();\r\n      this.eventDelegation = null;\r\n    }\r\n\r\n    await this.signalR.stop();\r\n\r\n    this.log('Minimact stopped');\r\n  }\r\n\r\n  /**\r\n   * Setup SignalR event handlers\r\n   */\r\n  private setupSignalRHandlers(): void {\r\n    // Handle full HTML updates\r\n    this.signalR.on('updateComponent', ({ componentId, html }) => {\r\n      const component = this.hydration.getComponent(componentId);\r\n      if (component) {\r\n        this.domPatcher.replaceHTML(component.element, html);\r\n        this.log('Component HTML updated', { componentId });\r\n      }\r\n    });\r\n\r\n    // Handle patch updates\r\n    this.signalR.on('applyPatches', ({ componentId, patches }) => {\r\n      const component = this.hydration.getComponent(componentId);\r\n      if (component) {\r\n        this.domPatcher.applyPatches(component.element, patches as Patch[]);\r\n        this.log('Patches applied', { componentId, patchCount: patches.length });\r\n      }\r\n    });\r\n\r\n    // Handle predicted patches (instant UI updates!)\r\n    this.signalR.on('applyPrediction', ({ componentId, patches, confidence }) => {\r\n      const component = this.hydration.getComponent(componentId);\r\n      if (component) {\r\n        this.domPatcher.applyPatches(component.element, patches as Patch[]);\r\n        this.log(`Prediction applied (${(confidence * 100).toFixed(0)}% confident)`, { componentId, patchCount: patches.length });\r\n      }\r\n    });\r\n\r\n    // Handle corrections if prediction was wrong\r\n    this.signalR.on('applyCorrection', ({ componentId, patches }) => {\r\n      const component = this.hydration.getComponent(componentId);\r\n      if (component) {\r\n        this.domPatcher.applyPatches(component.element, patches as Patch[]);\r\n        this.log('Correction applied (prediction was incorrect)', { componentId, patchCount: patches.length });\r\n      }\r\n    });\r\n\r\n    // Handle hint queueing (usePredictHint)\r\n    this.signalR.on('queueHint', (data) => {\r\n      this.hintQueue.queueHint(data);\r\n      this.log(`Hint '${data.hintId}' queued for component ${data.componentId}`, {\r\n        patchCount: data.patches.length,\r\n        confidence: (data.confidence * 100).toFixed(0) + '%'\r\n      });\r\n\r\n      // Notify playground that prediction was received\r\n      this.playgroundBridge.predictionReceived({\r\n        componentId: data.componentId,\r\n        hintId: data.hintId,\r\n        patchCount: data.patches.length,\r\n        confidence: data.confidence\r\n      });\r\n    });\r\n\r\n    // Handle reconnection\r\n    this.signalR.on('reconnected', async () => {\r\n      this.log('Reconnected - re-registering components');\r\n      await this.registerAllComponents();\r\n    });\r\n\r\n    // Handle errors\r\n    this.signalR.on('error', ({ message }) => {\r\n      console.error('[Minimact] Server error:', message);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register all components with the server\r\n   */\r\n  private async registerAllComponents(): Promise<void> {\r\n    const components = document.querySelectorAll('[data-minimact-component]');\r\n\r\n    for (const element of Array.from(components)) {\r\n      const componentId = element.getAttribute('data-minimact-component');\r\n      if (componentId) {\r\n        try {\r\n          await this.signalR.registerComponent(componentId);\r\n          this.log('Registered component', { componentId });\r\n        } catch (error) {\r\n          console.error('[Minimact] Failed to register component:', componentId, error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manually hydrate a component\r\n   */\r\n  hydrateComponent(componentId: string, element: HTMLElement): void {\r\n    this.hydration.hydrateComponent(componentId, element);\r\n  }\r\n\r\n  /**\r\n   * Get component by ID (for hot reload)\r\n   */\r\n  getComponent(componentId: string): any {\r\n    return this.hydration.getComponent(componentId);\r\n  }\r\n\r\n  /**\r\n   * Get client state for a component\r\n   */\r\n  getClientState(componentId: string, key: string): any {\r\n    return this.clientState.getState(componentId, key);\r\n  }\r\n\r\n  /**\r\n   * Set client state for a component\r\n   */\r\n  setClientState(componentId: string, key: string, value: any): void {\r\n    this.clientState.setState(componentId, key, value);\r\n\r\n    // Recompute client-computed variables that depend on this state\r\n    this.recomputeAndSyncClientState(componentId, key);\r\n  }\r\n\r\n  /**\r\n   * Subscribe to client state changes\r\n   */\r\n  subscribeToState(componentId: string, key: string, callback: (value: any) => void): () => void {\r\n    return this.clientState.subscribe(componentId, key, callback);\r\n  }\r\n\r\n  /**\r\n   * Recompute client-computed variables after state change and sync to server\r\n   */\r\n  private async recomputeAndSyncClientState(componentId: string, changedStateKey?: string): Promise<void> {\r\n    // Check if component has any client-computed variables\r\n    if (!ClientComputed.hasClientComputed(componentId)) {\r\n      return;\r\n    }\r\n\r\n    // Compute affected variables\r\n    const computed = changedStateKey\r\n      ? ClientComputed.computeDependentVariables(componentId, changedStateKey)\r\n      : ClientComputed.computeAllForComponent(componentId);\r\n\r\n    // If there are computed values, send to server\r\n    if (Object.keys(computed).length > 0) {\r\n      try {\r\n        await this.signalR.updateClientComputedState(componentId, computed);\r\n        this.log('Client-computed state synced', { componentId, computed });\r\n      } catch (error) {\r\n        console.error('[Minimact] Failed to sync client-computed state:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get SignalR connection state\r\n   */\r\n  get connectionState(): string {\r\n    return this.signalR.state.toString();\r\n  }\r\n\r\n  /**\r\n   * Get SignalR connection ID\r\n   */\r\n  get connectionId(): string | null {\r\n    return this.signalR.connectionId;\r\n  }\r\n\r\n  /**\r\n   * Debug logging\r\n   */\r\n  private log(message: string, data?: any): void {\r\n    if (this.options.enableDebugLogging) {\r\n      console.log(`[Minimact] ${message}`, data || '');\r\n    }\r\n  }\r\n}\r\n\r\n// Export all types and classes for advanced usage\r\nexport { SignalRManager } from './signalr-manager';\r\nexport { DOMPatcher } from './dom-patcher';\r\nexport { ClientStateManager } from './client-state';\r\nexport { EventDelegation } from './event-delegation';\r\nexport { HydrationManager } from './hydration';\r\nexport { HintQueue } from './hint-queue';\r\n\r\n// Client-computed state (for external libraries)\r\nexport {\r\n  registerClientComputed,\r\n  computeVariable,\r\n  computeAllForComponent,\r\n  computeDependentVariables,\r\n  getLastValue,\r\n  getAllLastValues,\r\n  hasClientComputed,\r\n  getComputedVariableNames,\r\n  clearComponent as clearClientComputedComponent,\r\n  getDebugInfo as getClientComputedDebugInfo\r\n} from './client-computed';\r\n\r\n// Template state (for hot reload)\r\nexport { TemplateStateManager, templateState } from './template-state';\r\nexport type { Template, TemplateMap } from './template-state';\r\n\r\n// Template renderer (for runtime prediction)\r\nexport { TemplateRenderer } from './template-renderer';\r\n\r\n// Core hooks\r\nexport { useState, useEffect, useRef, useServerTask, setComponentContext, clearComponentContext } from './hooks';\r\nexport type { ComponentContext } from './hooks';\r\n\r\n// useComputed hook (for client-side computation with browser APIs/libraries)\r\nexport { useComputed } from './useComputed';\r\nexport type { UseComputedOptions } from './useComputed';\r\n\r\n// Context hooks\r\nexport { createContext, useContext, setContextHookContext, clearContextHookContext } from './useContext';\r\nexport type { Context, ContextOptions } from './useContext';\r\n\r\n// Server task types\r\nexport type { ServerTask, ServerTaskOptions, ServerTaskStatus } from './server-task';\r\n\r\n// Paginated server task\r\nexport { usePaginatedServerTask } from './usePaginatedServerTask';\r\nexport type { PaginatedServerTask, PaginatedServerTaskOptions, PaginationParams } from './usePaginatedServerTask';\r\n\r\n// Pub/Sub hooks\r\nexport { usePub, useSub } from './pub-sub';\r\nexport type { PubSubMessage } from './pub-sub';\r\n\r\n// Task scheduling hooks\r\nexport { useMicroTask, useMacroTask, useAnimationFrame, useIdleCallback } from './task-scheduling';\r\n\r\n// SignalR hook\r\nexport { useSignalR } from './signalr-hook';\r\nexport type { SignalRHookState } from './signalr-hook';\r\n\r\n// Types\r\nexport * from './types';\r\n\r\n// Auto-initialize if data-minimact-auto-init is present\r\nif (typeof window !== 'undefined') {\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      if (document.body.hasAttribute('data-minimact-auto-init')) {\r\n        const minimact = new Minimact(document.body, {\r\n          enableDebugLogging: document.body.hasAttribute('data-minimact-debug')\r\n        });\r\n        minimact.start().catch(console.error);\r\n        (window as any).minimact = minimact;\r\n      }\r\n    });\r\n  } else {\r\n    if (document.body.hasAttribute('data-minimact-auto-init')) {\r\n      const minimact = new Minimact(document.body, {\r\n        enableDebugLogging: document.body.hasAttribute('data-minimact-debug')\r\n      });\r\n      minimact.start().catch(console.error);\r\n      (window as any).minimact = minimact;\r\n    }\r\n  }\r\n}\r\n\r\n// Make available globally\r\nif (typeof window !== 'undefined') {\r\n  (window as any).Minimact = Minimact;\r\n}\r\n\r\nexport default Minimact;\r\n"],"names":["AbortController","currentContext","ClientComputed.setDebugLogging","ClientComputed.hasClientComputed","ClientComputed.computeDependentVariables","ClientComputed.computeAllForComponent"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}